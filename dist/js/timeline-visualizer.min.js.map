{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../TimelineOS/dist/api/enums.js","../TimelineOS/dist/index.js","../TimelineOS/dist/lib.js","../TimelineOS/dist/resolver/expression.js","../TimelineOS/dist/resolver/resolver.js","../TimelineOS/dist/resolver/state.js","../TimelineOS/dist/resolver/validate.js","../TimelineOS/node_modules/tslib/tslib.js","../TimelineOS/node_modules/underscore/underscore.js","dist/index.js","dist/lib/timelineVisualizer.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/events/events.js","node_modules/fabric/dist/fabric.js","node_modules/ieee754/index.js","node_modules/lodash.isequal/index.js","node_modules/tslib/tslib.js"],"names":["f","exports","module","define","amd","window","global","self","this","TimelineVisualizer","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Object","defineProperty","value","EventType","__exportStar","resolver_1","Resolver","validate_1","validateTimeline","validateObject","validateKeyframe","_","isNumeric","str","isNumber","isString","match","isNaN","parseFloat","sortEvents","events","sort","b","time","aId","data","id","instance","bId","cleanInstances","instances","allowMerge","allowZeroGaps","each","push","start","references","end","convertEventsToInstances","activeInstances","activeInstanceId","previousActive","returnInstances","event","eventId","lastInstance","last","keys","getId","joinReferences","caps","joinCaps","latestInstance","reduce","memo","isReference","ref","isObject","isArray","undefined","_i","arguments","compact","uniq","concat","cap","extendMandadory","original","extendObj","extend","isConstant","invertInstances","invertedInstances_1","isFirst","operateOnArrays","array0","array1","operate","result","minLength","Math","min","Infinity","i_1","applyRepeatingInstances","repeatTime0","options","repeatTime","repeatedInstances","startTime","max","endTime","find","indexOf","limit","limitCount","i_2","limitTime","cappedStartTime","cappedEndTime","capInstances","parentInstances","parent","parent2","i2","clone","toString","resetId","wordIsOperator","operatorList","word","OPERATORS","interpretExpression","expr","regexpOperators","map","join","replace","RegExp","words","split","splice","innerExpression","wrapInnerExpressions","tmp","slice","inner","apply","rest","expression","words2Expression","operatorI","operator","lastIndexOf","l","validateExpression","expr0","breadcrumbs","has","lib_1","expression_1","state_1","resolveTimeline","timeline","resolvedTimeline","objects","classes","layers","statistics","unresolvedCount","resolvedCount","resolvedInstanceCount","resolvedObjectCount","resolvedGroupCount","resolvedKeyframeCount","addToResolvedTimeline","obj","levelDeep","parentId","isKeyframe","resolved","resolving","className","layer","isGroup","children","child","keyframes","keyframe","kf2","resolveTimelineObj","getState","eventLimit","lookedupRepeating","lookupExpression","enable","repeating","while","startExpr","hasParent","referToParent","lookedupStarts","applyParentInstances","events_1","iStart_1","iEnd_1","endExpr","lookedupEnds","duration","lookedupDuration","tmpLookedupDuration_1","cappedInstances_1","parentInstance","cappedInstance","filter","context","trim","invert","ignoreFirstIfZero","referencedObjs_1","m","exclamation","obj_1","m_1","objIds","objId","m_2","instanceDurations_1","referencedObj","firstInstance","first","firstDuration_1","d","returnInstances_1","lookupExpr","isNull","events_2","addEvents","left","calcResult","right","leftValue","rightValue","leftInstance","rightInstance","resultValue","resultReferences","instances_1","updateInstance","next","newResultValue","resultReferences_1","resultCaps","operateInner_1","enums_1","applyKeyframeContent","parentContent","keyframeContent","attr","state","nextEvents","resolvedObjects","values","activeObjIds","eventObjectTimes","disabled","parentObj","content","JSON","parse","stringify","setObj","existingObj","priority","type","START","END","kf","KEYFRAME","validateObject0","strict","uniqueIds","validateKeyframe0","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","factory","root","createExporter","previous","create","__esModule","v","exporter","extendStatics","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","prototype","assign","s","getOwnPropertySymbols","decorators","target","key","desc","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","body","y","g","label","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","pop","ar","error","asyncIterator","q","resume","fulfill","settle","shift","cooked","raw","mod","k","default","previousUnderscore","ArrayProto","ObjProto","SymbolProto","nativeIsArray","nativeKeys","nativeCreate","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","func","argCount","index","collection","accumulator","cb","iteratee","identity","isFunction","matcher","property","restArguments","startIndex","args","baseCreate","shallowProperty","path","deepGet","MAX_ARRAY_INDEX","pow","getLength","isArrayLike","forEach","collect","results","currentKey","createReduce","dir","initial","reducer","foldl","inject","reduceRight","foldr","detect","predicate","findIndex","findKey","select","list","negate","every","all","some","any","contains","includes","include","item","fromIndex","guard","invoke","contextPath","method","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","sample","random","rand","temp","sortBy","criteria","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","size","pass","head","take","array","tail","drop","Boolean","flatten","input","shallow","output","idx","isArguments","j","len","without","otherArrays","difference","unique","isSorted","isBoolean","seen","union","arrays","intersection","argsLength","unzip","zip","object","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","floor","createIndexFinder","predicateFind","range","stop","ceil","chunk","count","executeBound","sourceFunc","boundFunc","callingContext","bind","bound","callArgs","partial","boundArgs","placeholder","position","bindAll","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","timeout","later","leading","now","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","proto","prop","allKeys","mapObject","pairs","functions","methods","names","createAssigner","keysFunc","defaults","source","extendOwn","eq","deepEq","keyInObj","pick","omit","String","props","tap","interceptor","isMatch","aStack","bStack","valueOf","areArrays","aCtor","bCtor","isEqual","isEmpty","isElement","name","nodelist","document","childNodes","Int8Array","isFinite","isSymbol","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","string","test","escape","unescape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","text","settings","oldSettings","render","offset","variable","Function","argument","chain","_chain","chainResult","mixin","toJSON","fabric_1","superfly_timeline_1","DEFAULT_STEP_SIZE","DEFAULT_DRAW_RANGE","LABEL_WIDTH_OF_TIMELINE","DEFAULT_ZOOM_VALUE","ZOOM_FACTOR","PAN_FACTOR","MAX_LAYER_HEIGHT","DEFAULT_PLAYHEAD_SPEED","NAME_PLAYHEAD","COLOR_BACKGROUND","COLOR_LABEL_BACKGROUND","COLOR_PLAYHEAD","THICKNESS_PLAYHEAD","COLOR_LINE","THICKNESS_LINE","TEXT_FONT_FAMILY","TEXT_FONT_SIZE","TEXT_COLOR","COLOR_TIMELINE_OBJECT_FILL","COLOR_TIMELINE_OBJECT_BORDER","THICKNESS_TIMELINE_OBJECT_BORDER","TIMELINE_OBJECT_HEIGHT","EventEmitter","[object Object]","canvasId","super","stepSize","_layerLabelWidthProportionOfCanvas","_defaultDrawRange","_resolvedTimelines","_layerLabels","_drawTimeStart","_mouseDown","_timelineZoom","_fabricObjects","_layerFabricObjects","_playHeadPlaying","_playSpeed","_playHeadTime","_updateDrawLastTime","_canvasId","initCanvas","_drawPlayhead","drawPlayhead","_layerLabelWidth","_canvasWidth","_timelineWidth","_timelineStart","_playHeadPosition","background","fabric","Rect","top","fill","width","height","_canvasHeight","selectable","_canvas","add","playhead","getObjects","element","bringToFront","renderAll","updateDraw","Canvas","selection","hoverCursor","on","canvasMouseDown","canvasMouseUp","canvasMouseMove","canvasScrollWheel","canvasObjectHover","getWidth","getHeight","drawLayerLabels","drawInitialTimeline","setTimeline","currentState","getTimelineDrawState","hideTimelineFabricObjects","trimTimeline","currentTimeline","mergedTimelines","mergeTimelineObjects","past","present","createTimelineFabricObjects","redrawTimeline","viewPort","changed","zoom","updateScaledDrawTimeRange","_drawTimeEnd","_scaledDrawTimeRange","timestamp","playViewPort","_playViewPort","playSpeed","playPlayhead","playheadTime","computePlayheadPosition","_hoveredOver","getLayersToDraw","_rowHeight","calculateRowHeight","_timelineObjectHeight","layersArray","layerRect","layerText","Text","fontFamily","fontSize","textAlign","layerLine","set","_j","layerName","_drawTimeRange","_pixelsWidthPerUnitTime","timeLineState","ts","drawTimelineState","redrawPlayHead","currentDrawState","visible","setCoords","moveTo","timelineIndex","timeObj","parentID","instanceObj","createStateForObject","showOnTimeline","objectWidth","getObjectWidth","objectTop","getObjectOffsetFromTop","getObjectOffsetFromTimelineStart","displayName","resolvedObjectRect","stroke","strokeWidth","resolvedObjectLabel","createFabricObject","isAfter","isBefore","dt","updatePlayhead","updateEverything","play","requestAnimationFrame","pos","timeToXCoord","opt","_mouseLastX","clientX","preventDefault","stopPropagation","_lastScrollDirection","deltaX","canvasScrollByDeltaX","direction","canvasCoord","getPointer","x","ctrlKey","deltaY","abs","zoomUnderCursor","altKey","targetStart","targetEnd","over","meta","timelineMetaFromString","timelineObject","cursorPostion","hoverInfo","pointer","xPostion","yPosition","emit","detail","cursorX","coordToTime","cursorPosToTime","ratio","getCursorPositionAcrossTimeline","diff","newObjects","useInstance","newInstance","newObject","pastObj","presentObj","pastInstance","presentInstance","console","log","metaArray","parseInt","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","arr","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","Uint8Array","num","base64","ieee754","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","arg","encodingOrOffset","allocUnsafe","from","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","byteOffset","fromArrayBuffer","isBuffer","checked","copy","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","val","arrayIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","Number","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","enumerable","get","species","configurable","writable","poolSize","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","copyWithin","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","objectCreate","F","objectKeys","fn","_events","_eventsCount","_maxListeners","hasDefineProperty","defaultMaxListeners","err","$getMaxListeners","that","_addListener","listener","prepend","existing","newListener","unshift","warned","w","emitter","warn","message","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","setMaxListeners","getMaxListeners","er","handler","doError","isFn","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","addListener","prependListener","prependOnceListener","originalListener","spliceOne","removeAllListeners","rawListeners","eventNames","ownKeys","sqrt","atan2","PiBy180","PiBy2","degreesToRadians","originXOffset","originYOffset","toFixed","multipleSpacesRegex","setObjectScaleOverridden","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","scale","sourceY","drawImage","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","defaultView","DOMParser","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","initFilterBackend","isWebglSupported","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","__eventListeners","eventListener","util","observe","stopObserving","fire","listenersForEvent","Observable","off","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","nonSplicing","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","complexity","current","CommonMethods","_setOptions","_initGradient","filler","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","_setObject","_set","toggle","PI","cos","angle","sin","sign","removeFromArray","getRandomInt","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","rotateVector","Point","addEquals","vector","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","invertTransform","number","fractionDigits","parseUnit","unit","exec","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","camelize","charAt","toUpperCase","resolveNamespace","getSvgAttributes","attributes","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","substring","loadImageInDom","div","createElement","style","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","saveObjectTransform","isTransparent","tolerance","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","alignX","alignY","clearFabricFontCache","limitDimsByArea","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","_join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","byProperty","condition","value1","value2","deep","Element","getWholeChar","prev","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","superclass","returnValue","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","subclasses","unknown","areHostMethods","methodNames","getElement","setElement","uid","getUniqueId","__uniqueID","createWrappedHandler","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","handlers","addEventListener","removeEventListener","wrappedHandler","createListener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","pointerY","clientY","_getPointer","pageProp","clientProp","eventTouchProp","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","arrayLike","makeElement","tagName","el","htmlFor","setAttribute","docElement","scrollLeft","scrollTop","host","getComputedStyle","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","getElementById","addClass","wrapElement","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","_requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_cancelAnimFrame","cancelAnimationFrame","requestAnimFrame","animate","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","colorAttributes","normalizeAttr","normalizeValue","parentAttributes","transformMatrix","parseTransformAttribute","fillIndex","strokeIndex","getSvgRegex","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","classNames","getAttribute","elementById","node","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","hasAttribute","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","xlink","el2","currentTrans","oldLength","el3","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","pair","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","createClipPathCallback","container","_newObj","fillRule","clipRule","objTransformInv","gTransform","clipPath","calcTransformMatrix","setPositionByOrigin","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","h","round","_source","toRgb","toHsl","hsl","toHsla","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","calcViewportBoundaries","zoomToPoint","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","centerTransform","action","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","_fireEnterLeaveEvents","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","multiplier","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","originalContext","newVp","loadFromDatalessJSON","json","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_removeShadow","decl","lineDashOffset","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","additionalTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","withShadow","styleInfo","shadowInfo","absoluteClipPath","addPaintOrder","saveProps","tmpObj","dashedPropertySet","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","canUseUint8Clamped","drawImageTime","testContext","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","gpuInfo","renderer","vendor","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","main","mainParameter","_class","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","createImageData","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","uInvert","Noise","noise","uNoise","uSeed","Pixelate","blocksize","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","internalMarkup","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","_wrapLine","_measureWord","charOffset","_line","reservedSpace","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","LARGE_ARRAY_SIZE","HASH_UNDEFINED","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","MAX_SAFE_INTEGER","argsTag","arrayTag","asyncTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","arrayBufferTag","dataViewTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","mapToArray","setToArray","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","IE_PROTO","nativeObjectToString","reIsNative","symToStringTag","toStringTag","nativeGetSymbols","nativeIsBuffer","DataView","getNative","Map","Set","WeakMap","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","Hash","entries","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isBuff","skipIndexes","baseTimes","isIndex","assocIndexOf","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","bitmask","customizer","stack","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","baseKeys","arrValue","othIndex","symbolsFunc","arrayPush","baseGetAllKeys","getSymbols","getMapData","getValue","hash","resIndex","arrayFilter","symbol","ctorString","isLength","baseUnary"],"mappings":"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","file":"timeline-visualizer.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EventType;\r\n(function (EventType) {\r\n    EventType[EventType[\"START\"] = 0] = \"START\";\r\n    EventType[EventType[\"END\"] = 1] = \"END\";\r\n    EventType[EventType[\"KEYFRAME\"] = 2] = \"KEYFRAME\";\r\n})(EventType = exports.EventType || (exports.EventType = {}));\r\n//# sourceMappingURL=enums.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./api/enums\"), exports);\r\nvar resolver_1 = require(\"./resolver/resolver\");\r\nexports.Resolver = resolver_1.Resolver;\r\nvar validate_1 = require(\"./resolver/validate\");\r\nexports.validateTimeline = validate_1.validateTimeline;\r\nexports.validateObject = validate_1.validateObject;\r\nexports.validateKeyframe = validate_1.validateKeyframe;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require(\"underscore\");\r\n/**\r\n * Somewhat like _.extend, but with strong types & mandated additional properties\r\n * @param original Object to be extended\r\n * @param extendObj properties to add\r\n */\r\nfunction extendMandadory(original, extendObj) {\r\n    return _.extend(original, extendObj);\r\n}\r\nexports.extendMandadory = extendMandadory;\r\nfunction isConstant(str) {\r\n    return !!(isNumeric(str) ||\r\n        (_.isString(str) &&\r\n            (str.match(/^true$/) ||\r\n                str.match(/^false$/))));\r\n}\r\nexports.isConstant = isConstant;\r\nfunction isNumeric(str) {\r\n    if (str === null)\r\n        return false;\r\n    if (_.isNumber(str))\r\n        return true;\r\n    if (_.isString(str))\r\n        return !!(str.match(/^[0-9\\.\\-]+$/) && !_.isNaN(parseFloat(str)));\r\n    return false;\r\n}\r\nexports.isNumeric = isNumeric;\r\nfunction sortEvents(events) {\r\n    return events.sort(function (a, b) {\r\n        if (a.time > b.time)\r\n            return 1;\r\n        if (a.time < b.time)\r\n            return -1;\r\n        var aId = a.data && (a.data.id || (a.data.instance && a.data.instance.id));\r\n        var bId = b.data && (b.data.id || (b.data.instance && b.data.instance.id));\r\n        if (aId && bId && aId === bId) {\r\n            // If the event refer to the same ID, let the ending event be first:\r\n            if (a.value && !b.value)\r\n                return -1;\r\n            if (!a.value && b.value)\r\n                return 1;\r\n        }\r\n        if (a.value && !b.value)\r\n            return 1;\r\n        if (!a.value && b.value)\r\n            return -1;\r\n        return 0;\r\n    });\r\n}\r\nexports.sortEvents = sortEvents;\r\n/**\r\n * Clean up instances, join overlapping etc..\r\n * @param instances\r\n */\r\nfunction cleanInstances(instances, allowMerge, allowZeroGaps) {\r\n    // if (!allowMerge) throw new Error(`TODO: cleanInstances: allowMerge is temorarily removed`)\r\n    if (allowZeroGaps === void 0) { allowZeroGaps = false; }\r\n    var events = [];\r\n    // let i: number = 1\r\n    _.each(instances, function (instance) {\r\n        // const id = 'i' + (i++)\r\n        events.push({\r\n            time: instance.start,\r\n            value: true,\r\n            data: { instance: instance },\r\n            references: instance.references\r\n        });\r\n        if (instance.end !== null) {\r\n            events.push({\r\n                time: instance.end,\r\n                value: false,\r\n                data: { instance: instance },\r\n                references: instance.references\r\n            });\r\n        }\r\n    });\r\n    return convertEventsToInstances(events, allowMerge, allowZeroGaps);\r\n}\r\nexports.cleanInstances = cleanInstances;\r\nfunction convertEventsToInstances(events, allowMerge, allowZeroGaps) {\r\n    if (allowZeroGaps === void 0) { allowZeroGaps = false; }\r\n    sortEvents(events);\r\n    var activeInstances = {};\r\n    var activeInstanceId = null;\r\n    var previousActive = false;\r\n    var returnInstances = [];\r\n    _.each(events, function (event) {\r\n        var eventId = event.data.id || event.data.instance.id;\r\n        var lastInstance = _.last(returnInstances);\r\n        if (event.value) {\r\n            activeInstances[eventId] = event;\r\n        }\r\n        else {\r\n            delete activeInstances[eventId];\r\n        }\r\n        if (_.keys(activeInstances).length) {\r\n            // There is an active instance\r\n            previousActive = true;\r\n            if (!allowMerge &&\r\n                event.value &&\r\n                lastInstance &&\r\n                lastInstance.end === null &&\r\n                activeInstanceId !== null &&\r\n                activeInstanceId !== eventId) {\r\n                // Start a new instance:\r\n                lastInstance.end = event.time;\r\n                returnInstances.push({\r\n                    id: getId(),\r\n                    start: event.time,\r\n                    end: null,\r\n                    references: event.references\r\n                });\r\n                activeInstanceId = eventId;\r\n            }\r\n            else if (!allowMerge &&\r\n                !event.value &&\r\n                lastInstance &&\r\n                activeInstanceId === eventId) {\r\n                // The active instance stopped playing, but another is still playing\r\n                var latestInstance = _.reduce(activeInstances, function (memo, event, id) {\r\n                    if (memo === null ||\r\n                        memo.event.time < event.time) {\r\n                        return {\r\n                            event: event,\r\n                            id: id\r\n                        };\r\n                    }\r\n                    return memo;\r\n                }, null);\r\n                if (latestInstance) {\r\n                    // Restart that instance now:\r\n                    lastInstance.end = event.time;\r\n                    returnInstances.push({\r\n                        id: eventId + '_' + getId(),\r\n                        start: event.time,\r\n                        end: null,\r\n                        references: latestInstance.event.references\r\n                    });\r\n                    activeInstanceId = latestInstance.id;\r\n                }\r\n            }\r\n            else if (allowMerge &&\r\n                !allowZeroGaps &&\r\n                lastInstance &&\r\n                lastInstance.end === event.time) {\r\n                // The previously running ended just now\r\n                // resume previous instance:\r\n                lastInstance.end = null;\r\n                lastInstance.references = joinReferences(lastInstance.references, event.references);\r\n                lastInstance.caps = joinCaps(lastInstance.caps, event.data.instance.caps);\r\n            }\r\n            else if (!lastInstance ||\r\n                lastInstance.end !== null) {\r\n                // There is no previously running instance\r\n                // Start a new instance:\r\n                returnInstances.push({\r\n                    id: eventId,\r\n                    start: event.time,\r\n                    end: null,\r\n                    references: event.references,\r\n                    caps: event.data.instance.caps\r\n                });\r\n                activeInstanceId = eventId;\r\n            }\r\n            else {\r\n                // There is already a running instance\r\n                lastInstance.references = joinReferences(lastInstance.references, event.references);\r\n                lastInstance.caps = joinCaps(lastInstance.caps, event.data.instance.caps);\r\n            }\r\n            if (lastInstance && lastInstance.caps && !lastInstance.caps.length)\r\n                delete lastInstance.caps;\r\n        }\r\n        else {\r\n            // No instances are active\r\n            if (lastInstance &&\r\n                previousActive) {\r\n                lastInstance.end = event.time;\r\n            }\r\n            previousActive = false;\r\n        }\r\n    });\r\n    return returnInstances;\r\n}\r\nexports.convertEventsToInstances = convertEventsToInstances;\r\nfunction invertInstances(instances) {\r\n    if (instances.length) {\r\n        instances = cleanInstances(instances, true, true);\r\n        var invertedInstances_1 = [];\r\n        if (instances[0].start !== 0) {\r\n            invertedInstances_1.push({\r\n                id: getId(),\r\n                isFirst: true,\r\n                start: 0,\r\n                end: null,\r\n                references: joinReferences(instances[0].references, instances[0].id)\r\n            });\r\n        }\r\n        _.each(instances, function (instance) {\r\n            var last = _.last(invertedInstances_1);\r\n            if (last) {\r\n                last.end = instance.start;\r\n            }\r\n            if (instance.end !== null) {\r\n                invertedInstances_1.push({\r\n                    id: getId(),\r\n                    start: instance.end,\r\n                    end: null,\r\n                    references: joinReferences(instance.references, instance.id),\r\n                    caps: instance.caps\r\n                });\r\n            }\r\n        });\r\n        return invertedInstances_1;\r\n    }\r\n    else {\r\n        return [{\r\n                id: getId(),\r\n                isFirst: true,\r\n                start: 0,\r\n                end: null,\r\n                references: []\r\n            }];\r\n    }\r\n}\r\nexports.invertInstances = invertInstances;\r\n/**\r\n * Perform an action on 2 arrays. Behaves somewhat like the \".*\"-operator in Matlab\r\n * @param array0\r\n * @param array1\r\n * @param operate\r\n */\r\nfunction operateOnArrays(array0, array1, operate) {\r\n    if (array0 === null ||\r\n        array1 === null)\r\n        return null;\r\n    if (isReference(array0) &&\r\n        isReference(array1)) {\r\n        return operate(array0, array1);\r\n    }\r\n    var result = [];\r\n    var minLength = Math.min(_.isArray(array0) ? array0.length : Infinity, _.isArray(array1) ? array1.length : Infinity);\r\n    for (var i_1 = 0; i_1 < minLength; i_1++) {\r\n        var a = (_.isArray(array0) ?\r\n            array0[i_1] :\r\n            { id: '', start: array0.value, end: array0.value, references: array0.references });\r\n        var b = (_.isArray(array1) ?\r\n            array1[i_1] :\r\n            { id: '', start: array1.value, end: array1.value, references: array1.references });\r\n        var start = (a.isFirst ?\r\n            { value: a.start, references: a.references } :\r\n            b.isFirst ?\r\n                { value: b.start, references: b.references } :\r\n                operate({ value: a.start, references: joinReferences(a.id, a.references) }, { value: b.start, references: joinReferences(b.id, b.references) }));\r\n        var end = (a.isFirst ?\r\n            (a.end !== null ? { value: a.end, references: a.references } : null) :\r\n            b.isFirst ?\r\n                (b.end !== null ? { value: b.end, references: b.references } : null) :\r\n                operate(a.end !== null ? { value: a.end, references: joinReferences(a.id, a.references) } : null, b.end !== null ? { value: b.end, references: joinReferences(b.id, b.references) } : null));\r\n        if (start !== null) {\r\n            result.push({\r\n                id: getId(),\r\n                start: start.value,\r\n                end: end === null ? null : end.value,\r\n                references: joinReferences(start.references, end !== null ? end.references : []),\r\n                caps: joinCaps(a.caps, b.caps)\r\n            });\r\n        }\r\n    }\r\n    return cleanInstances(result, false);\r\n}\r\nexports.operateOnArrays = operateOnArrays;\r\n/**\r\n * Like operateOnArrays, but will multiply the number of elements in array0, with the number of elements in array1\r\n * @param array0\r\n * @param array1\r\n * @param operate\r\n */\r\n/*export function operateOnArraysMulti (\r\n    array0: Array<TimelineObjectInstance> | Reference | null,\r\n    array1: Array<TimelineObjectInstance> | Reference | null,\r\n    operate: (a: Reference | null, b: Reference | null) => Reference | null\r\n) {\r\n    if (array0 === null) return null\r\n\r\n    if (_.isArray(array1)) {\r\n        let resultArray: Array<TimelineObjectInstance> = []\r\n        _.each(array1, (array1Val) => {\r\n            const result = operateOnArrays(array0, { value: array1Val.start, references: array1Val.references } , operate)\r\n            if (_.isArray(result)) {\r\n                resultArray = resultArray.concat(result)\r\n            } else if (result !== null) {\r\n                resultArray.push({\r\n                    id: getId(),\r\n                    start: result.value,\r\n                    end: (\r\n                        array1Val.end !== null ?\r\n                        result.value + (array1Val.end - array1Val.start) :\r\n                        null\r\n                    ),\r\n                    references: result.references\r\n                })\r\n            }\r\n        })\r\n        return resultArray\r\n    } else {\r\n        return operateOnArrays(array0, array1, operate)\r\n    }\r\n}\r\n*/\r\nfunction applyRepeatingInstances(instances, repeatTime0, options) {\r\n    if (repeatTime0 === null ||\r\n        !repeatTime0.value)\r\n        return instances;\r\n    var repeatTime = repeatTime0.value;\r\n    if (isReference(instances)) {\r\n        instances = [{\r\n                id: '',\r\n                start: instances.value,\r\n                end: null,\r\n                references: instances.references\r\n            }];\r\n    }\r\n    var repeatedInstances = [];\r\n    _.each(instances, function (instance) {\r\n        var startTime = Math.max(options.time - (options.time - instance.start) % repeatTime, instance.start);\r\n        var endTime = (instance.end === null ?\r\n            null :\r\n            instance.end + (startTime - instance.start));\r\n        var cap = (instance.caps ?\r\n            _.find(instance.caps, function (cap) { return instance.references.indexOf(cap.id) !== -1; })\r\n            : null) || null;\r\n        var limit = options.limitCount || 2;\r\n        for (var i_2 = 0; i_2 < limit; i_2++) {\r\n            if (options.limitTime &&\r\n                startTime >= options.limitTime)\r\n                break;\r\n            var cappedStartTime = (cap ?\r\n                Math.max(cap.start, startTime) :\r\n                startTime);\r\n            var cappedEndTime = (cap && cap.end !== null && endTime !== null ?\r\n                Math.min(cap.end, endTime) :\r\n                endTime);\r\n            if ((cappedEndTime || Infinity) > cappedStartTime) {\r\n                repeatedInstances.push({\r\n                    id: getId(),\r\n                    start: cappedStartTime,\r\n                    end: cappedEndTime,\r\n                    references: joinReferences(instance.id, instance.references, repeatTime0.references)\r\n                });\r\n            }\r\n            startTime += repeatTime;\r\n            if (endTime !== null)\r\n                endTime += repeatTime;\r\n        }\r\n    });\r\n    return cleanInstances(repeatedInstances, false);\r\n}\r\nexports.applyRepeatingInstances = applyRepeatingInstances;\r\nfunction capInstances(instances, parentInstances) {\r\n    if (isReference(parentInstances) ||\r\n        parentInstances === null)\r\n        return instances;\r\n    var returnInstances = [];\r\n    _.each(instances, function (instance) {\r\n        var parent = null;\r\n        _.each(parentInstances, function (p) {\r\n            if (instance.start >= p.start &&\r\n                instance.start < (p.end || Infinity)) {\r\n                if (parent === null ||\r\n                    (p.end || Infinity) > (parent.end || Infinity)) {\r\n                    parent = p;\r\n                }\r\n            }\r\n        });\r\n        if (!parent) {\r\n            _.each(parentInstances, function (p) {\r\n                if ((instance.end || Infinity) > p.start &&\r\n                    (instance.end || Infinity) <= (p.end || Infinity)) {\r\n                    if (parent === null ||\r\n                        (p.end || Infinity) < (parent.end || Infinity)) {\r\n                        parent = p;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (parent) {\r\n            var parent2 = parent; // cast type\r\n            var i2 = _.clone(instance);\r\n            if (parent2.end !== null &&\r\n                (i2.end || Infinity) > parent2.end) {\r\n                i2.end = parent2.end;\r\n            }\r\n            if ((i2.start || Infinity) < parent2.start) {\r\n                i2.start = parent2.start;\r\n            }\r\n            returnInstances.push(i2);\r\n        }\r\n    });\r\n    return returnInstances;\r\n}\r\nexports.capInstances = capInstances;\r\nfunction isReference(ref) {\r\n    return (_.isObject(ref) &&\r\n        !_.isArray(ref) &&\r\n        ref.value !== undefined &&\r\n        _.isArray(ref.references) &&\r\n        ref !== null);\r\n}\r\nexports.isReference = isReference;\r\nfunction joinReferences() {\r\n    var references = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        references[_i] = arguments[_i];\r\n    }\r\n    return _.compact(_.uniq(_.reduce(references, function (memo, ref) {\r\n        if (_.isString(ref))\r\n            return memo.concat([ref]);\r\n        else\r\n            return memo.concat(ref);\r\n    }, []))).sort(function (a, b) {\r\n        if (a > b)\r\n            return 1;\r\n        if (a < b)\r\n            return -1;\r\n        return 0;\r\n    });\r\n}\r\nexports.joinReferences = joinReferences;\r\nfunction joinCaps() {\r\n    var caps = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        caps[_i] = arguments[_i];\r\n    }\r\n    return (_.uniq(_.compact(_.reduce(caps, function (memo, cap) {\r\n        if (cap !== undefined) {\r\n            return (memo || []).concat(cap);\r\n        }\r\n        else\r\n            return memo;\r\n    }, [])), false, function (cap) {\r\n        return cap.id;\r\n    }));\r\n}\r\nexports.joinCaps = joinCaps;\r\nvar i = 0;\r\n/**\r\n * Returns a unique id\r\n */\r\nfunction getId() {\r\n    return '@' + (i++).toString(36);\r\n}\r\nexports.getId = getId;\r\nfunction resetId() {\r\n    i = 0;\r\n}\r\nexports.resetId = resetId;\r\n//# sourceMappingURL=lib.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require(\"underscore\");\r\nexports.OPERATORS = ['&', '|', '+', '-', '*', '/', '%'];\r\nfunction interpretExpression(expr) {\r\n    if (_.isString(expr)) {\r\n        var operatorList = exports.OPERATORS;\r\n        var regexpOperators = _.map(operatorList, function (o) { return '\\\\' + o; }).join('');\r\n        expr = expr.replace(new RegExp('([' + regexpOperators + '\\\\(\\\\)])', 'g'), ' $1 '); // Make sure there's a space between every operator & operand\r\n        var words = _.compact(expr.split(' '));\r\n        if (words.length === 0)\r\n            return null; // empty expression\r\n        // Fix special case: a + - b\r\n        for (var i = words.length - 2; i >= 1; i--) {\r\n            if ((words[i] === '-' || words[i] === '+') && wordIsOperator(operatorList, words[i - 1])) {\r\n                words[i] = words[i] + words[i + 1];\r\n                words.splice(i + 1, 1);\r\n            }\r\n        }\r\n        var innerExpression = wrapInnerExpressions(words);\r\n        if (innerExpression.rest.length)\r\n            throw new Error('interpretExpression: syntax error: parentheses don\\'t add up in \"' + expr + '\".');\r\n        if (innerExpression.inner.length % 2 !== 1)\r\n            throw new Error('interpretExpression: operands & operators don\\'t add up: \"' + innerExpression.inner.join(' ') + '\".');\r\n        var expression = words2Expression(operatorList, innerExpression.inner);\r\n        validateExpression(operatorList, expression);\r\n        return expression;\r\n    }\r\n    else if (_.isNumber(expr)) {\r\n        return expr;\r\n        // return {\r\n        // \tl: expr,\r\n        // \to: '+',\r\n        // \tr: 0\r\n        // }\r\n    }\r\n    else {\r\n        return expr;\r\n    }\r\n}\r\nexports.interpretExpression = interpretExpression;\r\nfunction wordIsOperator(operatorList, word) {\r\n    if (operatorList.indexOf(word) !== -1)\r\n        return true;\r\n    return false;\r\n}\r\n// Turns ['a', '(', 'b', 'c', ')'] into ['a', ['b', 'c']]\r\nfunction wrapInnerExpressions(words) {\r\n    for (var i = 0; i < words.length; i++) {\r\n        if (words[i] === '(') {\r\n            var tmp = wrapInnerExpressions(words.slice(i + 1));\r\n            // insert inner expression and remove tha\r\n            words[i] = tmp.inner;\r\n            words.splice.apply(words, [i + 1, 99999].concat(tmp.rest));\r\n        }\r\n        else if (words[i] === ')') {\r\n            return {\r\n                inner: words.slice(0, i),\r\n                rest: words.slice(i + 1)\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        inner: words,\r\n        rest: []\r\n    };\r\n}\r\nfunction words2Expression(operatorList, words) {\r\n    if (!words || !words.length)\r\n        throw new Error('words2Expression: syntax error: unbalanced expression');\r\n    if (words.length === 1 && _.isArray(words[0]))\r\n        words = words[0];\r\n    if (words.length === 1)\r\n        return words[0];\r\n    // Find the operator with the highest priority:\r\n    var operatorI = -1;\r\n    _.each(operatorList, function (operator) {\r\n        if (operatorI === -1) {\r\n            operatorI = words.lastIndexOf(operator);\r\n        }\r\n    });\r\n    if (operatorI !== -1) {\r\n        var l = words.slice(0, operatorI);\r\n        var r = words.slice(operatorI + 1);\r\n        var expr = {\r\n            l: words2Expression(operatorList, l),\r\n            o: words[operatorI],\r\n            r: words2Expression(operatorList, r)\r\n        };\r\n        return expr;\r\n    }\r\n    else\r\n        throw new Error('words2Expression: syntax error: operator not found: \"' + (words.join(' ')) + '\"');\r\n}\r\nfunction validateExpression(operatorList, expr0, breadcrumbs) {\r\n    if (!breadcrumbs)\r\n        breadcrumbs = 'ROOT';\r\n    if (_.isObject(expr0)) {\r\n        var expr = expr0;\r\n        if (!_.has(expr, 'l'))\r\n            throw new Error('validateExpression: \"+breadcrumbs+\".l missing');\r\n        if (!_.has(expr, 'o'))\r\n            throw new Error('validateExpression: \"+breadcrumbs+\".o missing');\r\n        if (!_.has(expr, 'r'))\r\n            throw new Error('validateExpression: \"+breadcrumbs+\".r missing');\r\n        if (!_.isString(expr.o))\r\n            throw new Error('validateExpression: \"+breadcrumbs+\".o not a string');\r\n        if (!wordIsOperator(operatorList, expr.o))\r\n            throw new Error(breadcrumbs + '.o not valid: \"' + expr.o + '\"');\r\n        validateExpression(operatorList, expr.l, breadcrumbs + '.l');\r\n        validateExpression(operatorList, expr.r, breadcrumbs + '.r');\r\n    }\r\n}\r\n//# sourceMappingURL=expression.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require(\"underscore\");\r\nvar lib_1 = require(\"../lib\");\r\nvar validate_1 = require(\"./validate\");\r\nvar expression_1 = require(\"./expression\");\r\nvar state_1 = require(\"./state\");\r\nvar Resolver = /** @class */ (function () {\r\n    function Resolver() {\r\n    }\r\n    /**\r\n     * Go through all objects on the timeline and calculate all the timings.\r\n     * Returns a ResolvedTimeline which can be piped into Resolver.getState()\r\n     * @param timeline Array of timeline objects\r\n     * @param options Resolve options\r\n     */\r\n    Resolver.resolveTimeline = function (timeline, options) {\r\n        if (!_.isArray(timeline))\r\n            throw new Error('resolveTimeline: parameter timeline missing');\r\n        if (!options)\r\n            throw new Error('resolveTimeline: parameter options missing');\r\n        validate_1.validateTimeline(timeline, false);\r\n        lib_1.resetId();\r\n        var resolvedTimeline = {\r\n            options: _.clone(options),\r\n            objects: {},\r\n            classes: {},\r\n            layers: {},\r\n            statistics: {\r\n                unresolvedCount: 0,\r\n                resolvedCount: 0,\r\n                resolvedInstanceCount: 0,\r\n                resolvedObjectCount: 0,\r\n                resolvedGroupCount: 0,\r\n                resolvedKeyframeCount: 0\r\n            }\r\n        };\r\n        // Step 1: pre-populate resolvedTimeline with objects\r\n        var addToResolvedTimeline = function (obj, levelDeep, parentId, isKeyframe) {\r\n            if (resolvedTimeline.objects[obj.id])\r\n                throw Error(\"All timelineObjects must be unique! (duplicate: \\\"\" + obj.id + \"\\\")\");\r\n            var o = lib_1.extendMandadory(_.clone(obj), {\r\n                resolved: {\r\n                    resolved: false,\r\n                    resolving: false,\r\n                    instances: [],\r\n                    levelDeep: levelDeep\r\n                }\r\n            });\r\n            if (parentId)\r\n                o.resolved.parentId = parentId;\r\n            if (isKeyframe)\r\n                o.resolved.isKeyframe = true;\r\n            resolvedTimeline.objects[obj.id] = o;\r\n            if (obj.classes) {\r\n                _.each(obj.classes, function (className) {\r\n                    if (className) {\r\n                        if (!resolvedTimeline.classes[className])\r\n                            resolvedTimeline.classes[className] = [];\r\n                        resolvedTimeline.classes[className].push(obj.id);\r\n                    }\r\n                });\r\n            }\r\n            if (obj.layer) {\r\n                if (!resolvedTimeline.layers[obj.layer])\r\n                    resolvedTimeline.layers[obj.layer] = [];\r\n                resolvedTimeline.layers[obj.layer].push(obj.id);\r\n            }\r\n            // Add children:\r\n            if (obj.isGroup && obj.children) {\r\n                _.each(obj.children, function (child) {\r\n                    addToResolvedTimeline(child, levelDeep + 1, obj.id);\r\n                });\r\n            }\r\n            // Add keyframes:\r\n            if (obj.keyframes) {\r\n                _.each(obj.keyframes, function (keyframe) {\r\n                    var kf2 = lib_1.extendMandadory(_.clone(keyframe), {\r\n                        layer: ''\r\n                    });\r\n                    addToResolvedTimeline(kf2, levelDeep + 1, obj.id, true);\r\n                });\r\n            }\r\n        };\r\n        _.each(timeline, function (obj) {\r\n            addToResolvedTimeline(obj, 0);\r\n        });\r\n        // Step 2: go though and resolve the objects\r\n        _.each(resolvedTimeline.objects, function (obj) {\r\n            resolveTimelineObj(resolvedTimeline, obj);\r\n        });\r\n        return resolvedTimeline;\r\n    };\r\n    /**\r\n     * Calculate the state at a given point in time. Using a ResolvedTimeline calculated by Resolver.resolveTimeline.\r\n     * @param resolved ResolvedTimeline calculated by Resolver.resolveTimeline.\r\n     * @param time The point in time where to calculate the state\r\n     * @param eventLimit (Optional) Limits the number of returned upcoming events.\r\n     */\r\n    Resolver.getState = function (resolved, time, eventLimit) {\r\n        return state_1.getState(resolved, time, eventLimit);\r\n    };\r\n    return Resolver;\r\n}());\r\nexports.Resolver = Resolver;\r\nfunction resolveTimelineObj(resolvedTimeline, obj) {\r\n    if (obj.resolved.resolved)\r\n        return;\r\n    if (obj.resolved.resolving)\r\n        throw new Error(\"Circular dependency when trying to resolve \\\"\" + obj.id + \"\\\"\");\r\n    obj.resolved.resolving = true;\r\n    var instances = [];\r\n    var repeatingExpr = (obj.enable.repeating !== undefined ?\r\n        expression_1.interpretExpression(obj.enable.repeating) :\r\n        null);\r\n    var lookedupRepeating = lookupExpression(resolvedTimeline, obj, repeatingExpr, 'duration');\r\n    if (_.isArray(lookedupRepeating)) {\r\n        throw new Error(\"lookupExpression should never return an array for .duration lookup\"); // perhaps tmp? maybe revisit this at some point\r\n    }\r\n    var start = (obj.enable.while !== undefined ?\r\n        obj.enable.while :\r\n        obj.enable.start !== undefined ?\r\n            obj.enable.start :\r\n            '');\r\n    if (obj.enable.while === '1') {\r\n        start = 'true';\r\n    }\r\n    else if (obj.enable.while === '0') {\r\n        start = 'false';\r\n    }\r\n    var startExpr = expression_1.interpretExpression(start);\r\n    var parentInstances = null;\r\n    var hasParent = false;\r\n    var referToParent = false;\r\n    if (obj.resolved.parentId) {\r\n        hasParent = true;\r\n        parentInstances = lookupExpression(resolvedTimeline, obj, expression_1.interpretExpression(\"#\" + obj.resolved.parentId), 'start');\r\n        if (lib_1.isConstant(startExpr)) {\r\n            // Only use parent if the expression resolves to a number (ie doesn't contain any references)\r\n            referToParent = true;\r\n        }\r\n    }\r\n    var lookedupStarts = lookupExpression(resolvedTimeline, obj, startExpr, 'start');\r\n    var applyParentInstances = function (value) {\r\n        var operate = function (a, b) {\r\n            if (a === null || b === null)\r\n                return null;\r\n            return {\r\n                value: a.value + b.value,\r\n                references: lib_1.joinReferences(a.references, b.references)\r\n            };\r\n        };\r\n        return lib_1.operateOnArrays(parentInstances, value, operate);\r\n    };\r\n    if (referToParent) {\r\n        lookedupStarts = applyParentInstances(lookedupStarts);\r\n    }\r\n    if (obj.enable.while) {\r\n        if (_.isArray(lookedupStarts)) {\r\n            instances = lookedupStarts;\r\n        }\r\n        else if (lookedupStarts !== null) {\r\n            instances = [{\r\n                    id: lib_1.getId(),\r\n                    start: lookedupStarts.value,\r\n                    end: null,\r\n                    references: lookedupStarts.references\r\n                }];\r\n        }\r\n    }\r\n    else {\r\n        var events_1 = [];\r\n        var iStart_1 = 0;\r\n        var iEnd_1 = 0;\r\n        if (_.isArray(lookedupStarts)) {\r\n            _.each(lookedupStarts, function (instance) {\r\n                events_1.push({\r\n                    time: instance.start,\r\n                    value: true,\r\n                    data: { instance: instance, id: 'a' + iStart_1++ },\r\n                    references: instance.references\r\n                });\r\n            });\r\n        }\r\n        else if (lookedupStarts !== null) {\r\n            events_1.push({\r\n                time: lookedupStarts.value,\r\n                value: true,\r\n                data: { instance: { id: lib_1.getId(), start: lookedupStarts.value, end: null, references: lookedupStarts.references }, id: 'a' + iStart_1++ },\r\n                references: lookedupStarts.references\r\n            });\r\n        }\r\n        if (obj.enable.end !== undefined) {\r\n            var endExpr = expression_1.interpretExpression(obj.enable.end);\r\n            // lookedupEnds will contain an inverted list of instances. Therefore .start means an end\r\n            var lookedupEnds = (endExpr ?\r\n                lookupExpression(resolvedTimeline, obj, endExpr, 'end') :\r\n                null);\r\n            if (referToParent && lib_1.isConstant(endExpr)) {\r\n                lookedupEnds = applyParentInstances(lookedupEnds);\r\n            }\r\n            if (_.isArray(lookedupEnds)) {\r\n                _.each(lookedupEnds, function (instance) {\r\n                    events_1.push({\r\n                        time: instance.start,\r\n                        value: false,\r\n                        data: { instance: instance, id: 'a' + iEnd_1++ },\r\n                        references: instance.references\r\n                    });\r\n                });\r\n            }\r\n            else if (lookedupEnds !== null) {\r\n                events_1.push({\r\n                    time: lookedupEnds.value,\r\n                    value: false,\r\n                    data: { instance: { id: lib_1.getId(), start: lookedupEnds.value, end: null, references: lookedupEnds.references }, id: 'a' + iEnd_1++ },\r\n                    references: lookedupEnds.references\r\n                });\r\n            }\r\n        }\r\n        else if (obj.enable.duration !== undefined) {\r\n            var durationExpr = expression_1.interpretExpression(obj.enable.duration);\r\n            var lookedupDuration = lookupExpression(resolvedTimeline, obj, durationExpr, 'duration');\r\n            if (_.isArray(lookedupDuration) && lookedupDuration.length === 1) {\r\n                lookedupDuration = {\r\n                    value: lookedupDuration[0].start,\r\n                    references: lookedupDuration[0].references\r\n                };\r\n            }\r\n            if (_.isArray(lookedupDuration)) {\r\n                throw new Error(\"lookupExpression should never return an array for .duration lookup\"); // perhaps tmp? maybe revisit this at some point\r\n            }\r\n            else if (lookedupDuration !== null) {\r\n                if (lookedupRepeating !== null &&\r\n                    lookedupDuration.value > lookedupRepeating.value)\r\n                    lookedupDuration.value = lookedupRepeating.value;\r\n                var tmpLookedupDuration_1 = lookedupDuration; // cast type\r\n                _.each(events_1, function (e) {\r\n                    if (e.value) {\r\n                        var time = e.time + tmpLookedupDuration_1.value;\r\n                        var references = lib_1.joinReferences(e.references, tmpLookedupDuration_1.references);\r\n                        events_1.push({\r\n                            time: time,\r\n                            value: false,\r\n                            data: { id: e.data.id, instance: { id: e.data.instance.id, start: time, end: null, references: references } },\r\n                            references: references\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        instances = lib_1.convertEventsToInstances(events_1, false);\r\n    }\r\n    if (hasParent) {\r\n        // figure out what parent-instance the instances are tied to, and cap them\r\n        var cappedInstances_1 = [];\r\n        _.each(instances, function (instance) {\r\n            if (_.isArray(parentInstances)) {\r\n                var parentInstance = _.find(parentInstances, function (parentInstance) {\r\n                    return instance.references.indexOf(parentInstance.id) !== -1;\r\n                });\r\n                var cappedInstance = (parentInstance ?\r\n                    lib_1.capInstances([instance], [parentInstance])[0] :\r\n                    instance);\r\n                if (cappedInstance) {\r\n                    if (parentInstance) {\r\n                        if (!cappedInstance.caps)\r\n                            cappedInstance.caps = [];\r\n                        cappedInstance.caps.push({\r\n                            id: parentInstance.id,\r\n                            start: parentInstance.start,\r\n                            end: parentInstance.end\r\n                        });\r\n                    }\r\n                    cappedInstances_1.push(cappedInstance);\r\n                }\r\n            }\r\n        });\r\n        instances = cappedInstances_1;\r\n    }\r\n    instances = lib_1.applyRepeatingInstances(instances, lookedupRepeating, resolvedTimeline.options);\r\n    // filter out zero-length instances:\r\n    instances = _.filter(instances, function (instance) {\r\n        return ((instance.end || Infinity) > instance.start);\r\n    });\r\n    obj.resolved.resolved = true;\r\n    obj.resolved.resolving = false;\r\n    obj.resolved.instances = instances;\r\n    if (instances.length) {\r\n        resolvedTimeline.statistics.resolvedInstanceCount += instances.length;\r\n        resolvedTimeline.statistics.resolvedCount += 1;\r\n        if (obj.isGroup) {\r\n            resolvedTimeline.statistics.resolvedGroupCount += 1;\r\n        }\r\n        if (obj.resolved.isKeyframe) {\r\n            resolvedTimeline.statistics.resolvedKeyframeCount += 1;\r\n        }\r\n        else {\r\n            resolvedTimeline.statistics.resolvedObjectCount += 1;\r\n        }\r\n    }\r\n    else {\r\n        resolvedTimeline.statistics.unresolvedCount += 1;\r\n    }\r\n}\r\nexports.resolveTimelineObj = resolveTimelineObj;\r\nfunction lookupExpression(resolvedTimeline, obj, expr, context) {\r\n    if (expr === null)\r\n        return null;\r\n    if (_.isString(expr) &&\r\n        lib_1.isNumeric(expr)) {\r\n        return {\r\n            value: parseFloat(expr),\r\n            references: []\r\n        };\r\n    }\r\n    else if (_.isNumber(expr)) {\r\n        return {\r\n            value: expr,\r\n            references: []\r\n        };\r\n    }\r\n    else if (_.isString(expr)) {\r\n        expr = expr.trim();\r\n        if (lib_1.isConstant(expr)) {\r\n            if (expr.match(/^true$/i)) {\r\n                return {\r\n                    value: 0,\r\n                    references: []\r\n                };\r\n            }\r\n            else if (expr.match(/^false$/i)) {\r\n                return [];\r\n            }\r\n        }\r\n        // Look up string\r\n        var invert = false;\r\n        var ignoreFirstIfZero = false;\r\n        var referencedObjs_1 = [];\r\n        var ref = context;\r\n        var rest = '';\r\n        // Match id, example: \"#objectId.start\"\r\n        var m = expr.match(/^(!)?\\W*#([^.]+)(.*)/);\r\n        if (m) {\r\n            var exclamation = m[1];\r\n            var id = m[2];\r\n            rest = m[3];\r\n            if (exclamation === '!')\r\n                invert = !invert;\r\n            var obj_1 = resolvedTimeline.objects[id];\r\n            if (obj_1) {\r\n                referencedObjs_1.push(obj_1);\r\n            }\r\n        }\r\n        else {\r\n            // Match class, example: \".className.start\"\r\n            var m_1 = expr.match(/^(!)?\\W*\\.([^.]+)(.*)/);\r\n            if (m_1) {\r\n                var exclamation = m_1[1];\r\n                var className = m_1[2];\r\n                rest = m_1[3];\r\n                if (exclamation === '!')\r\n                    invert = !invert;\r\n                var objIds = resolvedTimeline.classes[className] || [];\r\n                _.each(objIds, function (objId) {\r\n                    var obj = resolvedTimeline.objects[objId];\r\n                    if (obj) {\r\n                        referencedObjs_1.push(obj);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                // Match layer, example: \"$layer\"\r\n                var m_2 = expr.match(/^(!)?\\W*\\$([^.]+)(.*)/);\r\n                if (m_2) {\r\n                    var exclamation = m_2[1];\r\n                    var layer = m_2[2];\r\n                    rest = m_2[3];\r\n                    if (exclamation === '!')\r\n                        invert = !invert;\r\n                    var objIds = resolvedTimeline.layers[layer] || [];\r\n                    _.each(objIds, function (objId) {\r\n                        var obj = resolvedTimeline.objects[objId];\r\n                        if (obj) {\r\n                            referencedObjs_1.push(obj);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (referencedObjs_1.length) {\r\n            if (rest.match(/start/))\r\n                ref = 'start';\r\n            if (rest.match(/end/))\r\n                ref = 'end';\r\n            if (rest.match(/duration/))\r\n                ref = 'duration';\r\n            if (ref === 'duration') {\r\n                // Duration refers to the first object on the resolved timeline\r\n                var instanceDurations_1 = [];\r\n                _.each(referencedObjs_1, function (referencedObj) {\r\n                    resolveTimelineObj(resolvedTimeline, referencedObj);\r\n                    if (referencedObj.resolved.resolved) {\r\n                        var firstInstance = _.first(referencedObj.resolved.instances);\r\n                        if (firstInstance) {\r\n                            var duration = (firstInstance && firstInstance.end !== null ?\r\n                                firstInstance.end - firstInstance.start :\r\n                                null);\r\n                            if (duration !== null) {\r\n                                instanceDurations_1.push({\r\n                                    value: duration,\r\n                                    references: lib_1.joinReferences(referencedObj.id, firstInstance.references)\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                var firstDuration_1 = null;\r\n                _.each(instanceDurations_1, function (d) {\r\n                    if (firstDuration_1 === null || d.value < firstDuration_1.value)\r\n                        firstDuration_1 = d;\r\n                });\r\n                return firstDuration_1;\r\n            }\r\n            else {\r\n                var returnInstances_1 = [];\r\n                if (ref === 'start') {\r\n                    // nothing\r\n                }\r\n                else if (ref === 'end') {\r\n                    invert = !invert;\r\n                    ignoreFirstIfZero = true;\r\n                }\r\n                else\r\n                    throw Error(\"Unknown ref: \\\"\" + ref + \"\\\"\");\r\n                _.each(referencedObjs_1, function (referencedObj) {\r\n                    resolveTimelineObj(resolvedTimeline, referencedObj);\r\n                    if (referencedObj.resolved.resolved) {\r\n                        returnInstances_1 = returnInstances_1.concat(referencedObj.resolved.instances);\r\n                    }\r\n                });\r\n                if (returnInstances_1.length) {\r\n                    if (invert) {\r\n                        returnInstances_1 = lib_1.invertInstances(returnInstances_1);\r\n                    }\r\n                    else {\r\n                        returnInstances_1 = lib_1.cleanInstances(returnInstances_1, true, true);\r\n                    }\r\n                    if (ignoreFirstIfZero) {\r\n                        var first = _.first(returnInstances_1);\r\n                        if (first && first.start === 0) {\r\n                            returnInstances_1.splice(0, 1);\r\n                        }\r\n                    }\r\n                    return returnInstances_1;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    else {\r\n        if (expr) {\r\n            var lookupExpr = {\r\n                l: lookupExpression(resolvedTimeline, obj, expr.l, context),\r\n                o: expr.o,\r\n                r: lookupExpression(resolvedTimeline, obj, expr.r, context)\r\n            };\r\n            if (_.isNull(lookupExpr.l) ||\r\n                _.isNull(lookupExpr.r)) {\r\n                return null;\r\n            }\r\n            if (lookupExpr.o === '&' ||\r\n                lookupExpr.o === '|') {\r\n                var events_2 = [];\r\n                var addEvents = function (instances, left) {\r\n                    _.each(instances, function (instance) {\r\n                        events_2.push({\r\n                            left: left,\r\n                            time: instance.start,\r\n                            value: true,\r\n                            references: [],\r\n                            data: true,\r\n                            instance: instance\r\n                        });\r\n                        if (instance.end !== null) {\r\n                            events_2.push({\r\n                                left: left,\r\n                                time: instance.end,\r\n                                value: false,\r\n                                references: [],\r\n                                data: false,\r\n                                instance: instance\r\n                            });\r\n                        }\r\n                    });\r\n                };\r\n                if (_.isArray(lookupExpr.l))\r\n                    addEvents(lookupExpr.l, true);\r\n                if (_.isArray(lookupExpr.r))\r\n                    addEvents(lookupExpr.r, false);\r\n                events_2 = lib_1.sortEvents(events_2);\r\n                var calcResult = (lookupExpr.o === '&' ?\r\n                    function (left, right) { return !!(left && right); } :\r\n                    lookupExpr.o === '|' ?\r\n                        function (left, right) { return !!(left || right); } :\r\n                        function () { return false; });\r\n                var leftValue = (lib_1.isReference(lookupExpr.l) ? !!lookupExpr.l.value : false);\r\n                var rightValue = (lib_1.isReference(lookupExpr.r) ? !!lookupExpr.r.value : false);\r\n                var leftInstance = null;\r\n                var rightInstance = null;\r\n                var resultValue = calcResult(leftValue, rightValue);\r\n                var resultReferences = lib_1.joinReferences((lib_1.isReference(lookupExpr.l) ? lookupExpr.l.references : []), (lib_1.isReference(lookupExpr.r) ? lookupExpr.r.references : []));\r\n                var instances_1 = [];\r\n                var updateInstance = function (time, value, references, caps) {\r\n                    if (value) {\r\n                        instances_1.push({\r\n                            id: lib_1.getId(),\r\n                            start: time,\r\n                            end: null,\r\n                            references: references,\r\n                            caps: caps\r\n                        });\r\n                    }\r\n                    else {\r\n                        var last = _.last(instances_1);\r\n                        if (last) {\r\n                            last.end = time;\r\n                            // don't update reference on end\r\n                        }\r\n                    }\r\n                };\r\n                updateInstance(0, resultValue, resultReferences, []);\r\n                for (var i = 0; i < events_2.length; i++) {\r\n                    var e = events_2[i];\r\n                    var next = events_2[i + 1];\r\n                    if (e.left) {\r\n                        leftValue = e.value;\r\n                        leftInstance = e.instance;\r\n                    }\r\n                    else {\r\n                        rightValue = e.value;\r\n                        rightInstance = e.instance;\r\n                    }\r\n                    if (!next || next.time !== e.time) {\r\n                        var newResultValue = calcResult(leftValue, rightValue);\r\n                        var resultReferences_1 = lib_1.joinReferences(leftInstance ? leftInstance.references : [], rightInstance ? rightInstance.references : []);\r\n                        var resultCaps = ((leftInstance ? leftInstance.caps || [] : []).concat(rightInstance ? rightInstance.caps || [] : []));\r\n                        if (newResultValue !== resultValue) {\r\n                            updateInstance(e.time, newResultValue, resultReferences_1, resultCaps);\r\n                            resultValue = newResultValue;\r\n                        }\r\n                    }\r\n                }\r\n                return instances_1;\r\n            }\r\n            else {\r\n                var operateInner_1 = (lookupExpr.o === '+' ?\r\n                    function (a, b) { return { value: a.value + b.value, references: lib_1.joinReferences(a.references, b.references) }; } :\r\n                    lookupExpr.o === '-' ?\r\n                        function (a, b) { return { value: a.value - b.value, references: lib_1.joinReferences(a.references, b.references) }; } :\r\n                        lookupExpr.o === '*' ?\r\n                            function (a, b) { return { value: a.value * b.value, references: lib_1.joinReferences(a.references, b.references) }; } :\r\n                            lookupExpr.o === '/' ?\r\n                                function (a, b) { return { value: a.value / b.value, references: lib_1.joinReferences(a.references, b.references) }; } :\r\n                                lookupExpr.o === '%' ?\r\n                                    function (a, b) { return { value: a.value % b.value, references: lib_1.joinReferences(a.references, b.references) }; } :\r\n                                    function () { return null; });\r\n                var operate = function (a, b) {\r\n                    if (a === null || b === null)\r\n                        return null;\r\n                    return operateInner_1(a, b);\r\n                };\r\n                var result = lib_1.operateOnArrays(lookupExpr.l, lookupExpr.r, operate);\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.lookupExpression = lookupExpression;\r\n//# sourceMappingURL=resolver.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require(\"underscore\");\r\nvar enums_1 = require(\"../api/enums\");\r\nvar lib_1 = require(\"../lib\");\r\nfunction getState(resolved, time, eventLimit) {\r\n    if (eventLimit === void 0) { eventLimit = 0; }\r\n    var state = {\r\n        time: time,\r\n        layers: {},\r\n        nextEvents: []\r\n    };\r\n    if (!resolved.objects)\r\n        throw new Error('getState: input data missing .objects attribute');\r\n    var resolvedObjects = _.values(resolved.objects);\r\n    // Sort to make sure parent groups are evaluated before their children:\r\n    resolvedObjects.sort(function (a, b) {\r\n        if ((a.resolved.levelDeep || 0) > (b.resolved.levelDeep || 0))\r\n            return 1;\r\n        if ((a.resolved.levelDeep || 0) < (b.resolved.levelDeep || 0))\r\n            return -1;\r\n        return 0;\r\n    });\r\n    var activeObjIds = {};\r\n    var eventObjectTimes = {};\r\n    _.each(resolvedObjects, function (obj) {\r\n        if (!obj.disabled &&\r\n            obj.resolved.resolved &&\r\n            !obj.resolved.isKeyframe) {\r\n            _.each(obj.resolved.instances, function (instance) {\r\n                if (obj.layer) { // if layer is empty, don't put in state\r\n                    if (\r\n                    // object instance is active:\r\n                    (instance.end === null ||\r\n                        instance.end > time) &&\r\n                        instance.start <= time) {\r\n                        var parentObj = (obj.resolved.parentId ?\r\n                            resolved.objects[obj.resolved.parentId] :\r\n                            null);\r\n                        // If object has a parent, only set if parent is on layer (if layer is set for parent)\r\n                        if (!obj.resolved.parentId ||\r\n                            (parentObj &&\r\n                                (!parentObj.layer ||\r\n                                    activeObjIds[parentObj.id]))) {\r\n                            var clone = lib_1.extendMandadory(_.clone(obj), {\r\n                                instance: _.clone(instance)\r\n                            });\r\n                            clone.content = JSON.parse(JSON.stringify(clone.content));\r\n                            var setObj = false;\r\n                            var existingObj = state.layers[obj.layer];\r\n                            if (!existingObj) {\r\n                                setObj = true;\r\n                            }\r\n                            else {\r\n                                // Priority:\r\n                                if (((obj.priority || 0) > (existingObj.priority || 0) // obj has higher priority => replaces existingObj\r\n                                ) || ((obj.priority || 0) === (existingObj.priority || 0) &&\r\n                                    (instance.start || 0) > (existingObj.instance.start || 0) // obj starts later => replaces existingObj\r\n                                )) {\r\n                                    setObj = true;\r\n                                }\r\n                            }\r\n                            if (setObj) {\r\n                                if (existingObj) {\r\n                                    // replace object on layer:\r\n                                    delete activeObjIds[existingObj.id];\r\n                                }\r\n                                state.layers[obj.layer] = clone;\r\n                                activeObjIds[clone.id] = clone;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (instance.start > time) {\r\n                        state.nextEvents.push({\r\n                            type: enums_1.EventType.START,\r\n                            time: instance.start,\r\n                            objId: obj.id\r\n                        });\r\n                        eventObjectTimes['' + instance.start] = enums_1.EventType.START;\r\n                    }\r\n                    if (instance.end !== null &&\r\n                        instance.end > time) {\r\n                        state.nextEvents.push({\r\n                            type: enums_1.EventType.END,\r\n                            time: instance.end,\r\n                            objId: obj.id\r\n                        });\r\n                        eventObjectTimes['' + instance.end] = enums_1.EventType.END;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    // _.each(state.layers, (obj) => {\r\n    // \tactiveObjIds[obj.id] = obj\r\n    // })\r\n    // Keyframes:\r\n    var keyframes = [];\r\n    _.each(resolved.objects, function (obj) {\r\n        if (!obj.disabled &&\r\n            obj.resolved.resolved &&\r\n            obj.resolved.isKeyframe &&\r\n            obj.resolved.parentId) {\r\n            _.each(obj.resolved.instances, function (instance) {\r\n                var kf = lib_1.extendMandadory(obj, {\r\n                    instance: instance\r\n                });\r\n                keyframes.push(kf);\r\n                if (instance.start > time &&\r\n                    // tslint:disable-next-line\r\n                    eventObjectTimes['' + instance.start] === undefined // no need to put a keyframe event if there's already another event\r\n                ) {\r\n                    state.nextEvents.push({\r\n                        type: enums_1.EventType.KEYFRAME,\r\n                        time: instance.start,\r\n                        objId: obj.id\r\n                    });\r\n                    eventObjectTimes['' + instance.start] = enums_1.EventType.KEYFRAME;\r\n                }\r\n                if (instance.end !== null &&\r\n                    instance.end > time &&\r\n                    // tslint:disable-next-line\r\n                    eventObjectTimes['' + instance.end] === undefined // no need to put a keyframe event if there's already another event\r\n                ) {\r\n                    state.nextEvents.push({\r\n                        type: enums_1.EventType.KEYFRAME,\r\n                        time: instance.end,\r\n                        objId: obj.id\r\n                    });\r\n                    eventObjectTimes['' + instance.end] = enums_1.EventType.KEYFRAME;\r\n                }\r\n            });\r\n        }\r\n    });\r\n    keyframes.sort(function (a, b) {\r\n        if (a.instance.start > b.instance.start)\r\n            return 1;\r\n        if (a.instance.start < b.instance.start)\r\n            return -1;\r\n        if (a.id > b.id)\r\n            return -1;\r\n        if (a.id < b.id)\r\n            return 1;\r\n        return 0;\r\n    });\r\n    _.each(keyframes, function (keyframe) {\r\n        if (keyframe.resolved.parentId) {\r\n            var parentObj = activeObjIds[keyframe.resolved.parentId];\r\n            if (parentObj) { // keyframe is on an active object\r\n                if (\r\n                // keyframe instance is active:\r\n                (keyframe.instance.end === null ||\r\n                    keyframe.instance.end > time) &&\r\n                    keyframe.instance.start <= time &&\r\n                    // keyframe is within the keyframe.instance of its parent:\r\n                    keyframe.instance.start >= parentObj.instance.start &&\r\n                    (parentObj.instance.end === null ||\r\n                        keyframe.instance.start < parentObj.instance.end)) {\r\n                    applyKeyframeContent(parentObj.content, keyframe.content);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    state.nextEvents.sort(function (a, b) {\r\n        if (a.time > b.time)\r\n            return 1;\r\n        if (a.time < b.time)\r\n            return -1;\r\n        if (a.type > b.type)\r\n            return -1;\r\n        if (a.type < b.type)\r\n            return 1;\r\n        if (a.objId < b.objId)\r\n            return -1;\r\n        if (a.objId > b.objId)\r\n            return 1;\r\n        return 0;\r\n    });\r\n    if (eventLimit > 0 && state.nextEvents.length > eventLimit)\r\n        state.nextEvents.splice(eventLimit); // delete the rest\r\n    return state;\r\n}\r\nexports.getState = getState;\r\nfunction applyKeyframeContent(parentContent, keyframeContent) {\r\n    _.each(keyframeContent, function (value, attr) {\r\n        if (_.isArray(value)) {\r\n            if (!_.isArray(parentContent[attr]))\r\n                parentContent[attr] = [];\r\n            applyKeyframeContent(parentContent[attr], value);\r\n            parentContent[attr].splice(value.length, 99999);\r\n        }\r\n        else if (_.isObject(value)) {\r\n            if (!_.isObject(parentContent[attr]) ||\r\n                _.isArray(parentContent[attr]))\r\n                parentContent[attr] = {};\r\n            applyKeyframeContent(parentContent[attr], value);\r\n        }\r\n        else {\r\n            parentContent[attr] = value;\r\n        }\r\n    });\r\n}\r\nexports.applyKeyframeContent = applyKeyframeContent;\r\n//# sourceMappingURL=state.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require(\"underscore\");\r\nfunction validateObject0(obj, strict, uniqueIds) {\r\n    if (!uniqueIds)\r\n        uniqueIds = {};\r\n    if (!obj)\r\n        throw new Error(\"Object is undefined\");\r\n    if (!_.isObject(obj))\r\n        throw new Error(\"Object is not an object\");\r\n    if (!obj.id)\r\n        throw new Error(\"Object missing \\\"id\\\" attribute\");\r\n    if (!_.isString(obj.id))\r\n        throw new Error(\"Object \\\"id\\\" attribute is not a string: \\\"\" + obj.id + \"\\\"\");\r\n    if (uniqueIds[obj.id])\r\n        throw new Error(\"Object id \\\"\" + obj.id + \"\\\" is not unique\");\r\n    uniqueIds[obj.id] = true;\r\n    // @ts-ignore\r\n    if (obj.layer === undefined)\r\n        throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"layer\\\" attribute is undefined\");\r\n    if (!obj.content)\r\n        throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"content\\\" attribute must be set\");\r\n    if (!obj.enable)\r\n        throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"enable\\\" attribute must be set\");\r\n    if (obj.enable.start !== undefined) {\r\n        if (strict && obj.enable.while !== undefined)\r\n            throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"enable.start\\\" and \\\"enable.while\\\" cannot be combined\");\r\n        if (strict &&\r\n            obj.enable.end !== undefined &&\r\n            obj.enable.duration !== undefined)\r\n            throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"enable.end\\\" and \\\"enable.duration\\\" cannot be combined\");\r\n    }\r\n    else if (obj.enable.while !== undefined) {\r\n        if (strict && obj.enable.end !== undefined)\r\n            throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"enable.while\\\" and \\\"enable.end\\\" cannot be combined\");\r\n        if (strict && obj.enable.duration !== undefined)\r\n            throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"enable.while\\\" and \\\"enable.duration\\\" cannot be combined\");\r\n    }\r\n    else\r\n        throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"enable.start\\\" or \\\"enable.while\\\" must be set\");\r\n    if (obj.keyframes) {\r\n        _.each(obj.keyframes, function (keyframe, i) {\r\n            try {\r\n                validateKeyframe0(keyframe, strict, uniqueIds);\r\n            }\r\n            catch (e) {\r\n                throw new Error(\"Object \\\"\" + obj.id + \"\\\" keyframe[\" + i + \"]: \" + e);\r\n            }\r\n        });\r\n    }\r\n    if (obj.classes) {\r\n        _.each(obj.classes, function (className, i) {\r\n            if (className && !_.isString(className))\r\n                throw new Error(\"Object \\\"\" + obj.id + \"\\\": \\\"classes[\" + i + \"]\\\" is not a string\");\r\n        });\r\n    }\r\n    if (obj.children && !obj.isGroup)\r\n        throw new Error(\"Object \\\"\" + obj.id + \"\\\": attribute \\\"children\\\" is set but \\\"isGroup\\\" is not\");\r\n    if (obj.isGroup && !obj.children)\r\n        throw new Error(\"Object \\\"\" + obj.id + \"\\\": attribute \\\"isGroup\\\" is set but \\\"children\\\" missing\");\r\n    if (obj.children) {\r\n        _.each(obj.children, function (child, i) {\r\n            try {\r\n                validateObject0(child, strict, uniqueIds);\r\n            }\r\n            catch (e) {\r\n                throw new Error(\"Object \\\"\" + obj.id + \"\\\" child[\" + i + \"]: \" + e);\r\n            }\r\n        });\r\n    }\r\n    if (obj.priority !== undefined && !_.isNumber(obj.priority))\r\n        throw new Error(\"Object \\\"\" + obj.id + \"\\\": attribute \\\"priority\\\" is not a number\");\r\n}\r\nfunction validateKeyframe0(keyframe, strict, uniqueIds) {\r\n    if (!uniqueIds)\r\n        uniqueIds = {};\r\n    if (!keyframe)\r\n        throw new Error(\"Keyframe is undefined\");\r\n    if (!_.isObject(keyframe))\r\n        throw new Error(\"Keyframe is not an object\");\r\n    if (!keyframe.id)\r\n        throw new Error(\"Keyframe missing id attribute\");\r\n    if (!_.isString(keyframe.id))\r\n        throw new Error(\"Keyframe id attribute is not a string: \\\"\" + keyframe.id + \"\\\"\");\r\n    if (uniqueIds[keyframe.id])\r\n        throw new Error(\"Keyframe id \\\"\" + keyframe.id + \"\\\" is not unique\");\r\n    uniqueIds[keyframe.id] = true;\r\n    if (!keyframe.content)\r\n        throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"content\\\" attribute must be set\");\r\n    if (!keyframe.enable)\r\n        throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"enable\\\" attribute must be set\");\r\n    if (keyframe.enable.start !== undefined) {\r\n        if (strict && keyframe.enable.while !== undefined)\r\n            throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"enable.start\\\" and \\\"enable.while\\\" cannot be combined\");\r\n        if (strict &&\r\n            keyframe.enable.end !== undefined &&\r\n            keyframe.enable.duration !== undefined)\r\n            throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"enable.end\\\" and \\\"enable.duration\\\" cannot be combined\");\r\n    }\r\n    else if (keyframe.enable.while !== undefined) {\r\n        if (strict && keyframe.enable.end !== undefined)\r\n            throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"enable.while\\\" and \\\"enable.end\\\" cannot be combined\");\r\n        if (strict && keyframe.enable.duration !== undefined)\r\n            throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"enable.while\\\" and \\\"enable.duration\\\" cannot be combined\");\r\n    }\r\n    else\r\n        throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"enable.start\\\" or \\\"enable.while\\\" must be set\");\r\n    if (keyframe.classes) {\r\n        _.each(keyframe.classes, function (className, i) {\r\n            if (className && !_.isString(className))\r\n                throw new Error(\"Keyframe \\\"\" + keyframe.id + \"\\\": \\\"classes[\" + i + \"]\\\" is not a string\");\r\n        });\r\n    }\r\n}\r\n/**\r\n * Validates all objects in the timeline. Throws an error if something's wrong\r\n * @param timeline The timeline to validate\r\n * @param strict Set to true to enable some strict rules (rules that can possibly be ignored)\r\n */\r\nfunction validateTimeline(timeline, strict) {\r\n    var uniqueIds = {};\r\n    _.each(timeline, function (obj) {\r\n        validateObject0(obj, strict, uniqueIds);\r\n    });\r\n}\r\nexports.validateTimeline = validateTimeline;\r\n/**\r\n * Validates a Timeline-object. Throws an error if something's wrong\r\n * @param timeline The timeline to validate\r\n * @param strict Set to true to enable some strict rules (rules that can possibly be ignored)\r\n */\r\nfunction validateObject(obj, strict) {\r\n    validateObject0(obj, strict);\r\n}\r\nexports.validateObject = validateObject;\r\n/**\r\n * Validates a Timeline-keyframe. Throws an error if something's wrong\r\n * @param timeline The timeline to validate\r\n * @param strict Set to true to enable some strict rules (rules that can possibly be ignored)\r\n */\r\nfunction validateKeyframe(keyframe, strict) {\r\n    validateKeyframe0(keyframe, strict);\r\n}\r\nexports.validateKeyframe = validateKeyframe;\r\n//# sourceMappingURL=validate.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n});\r\n","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\ntslib_1.__exportStar(require(\"./lib/timelineVisualizer\"), exports);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fabric_1 = require(\"fabric\");\r\nconst isEqual = require(\"lodash.isequal\");\r\nconst superfly_timeline_1 = require(\"superfly-timeline\");\r\nconst events_1 = require(\"events\");\r\n/** Step size/ time step. */\r\nconst DEFAULT_STEP_SIZE = 1;\r\n/** Draw range (will be multiplied by DEFAULT_STEP_SIZE). */\r\nconst DEFAULT_DRAW_RANGE = 500;\r\n/** Width of label column. */\r\nconst LABEL_WIDTH_OF_TIMELINE = 0.25;\r\n/** Default zoom */\r\nconst DEFAULT_ZOOM_VALUE = 100;\r\n/** Factor to zoom by */\r\nconst ZOOM_FACTOR = 1.001;\r\n/** Factor to pan by (pan = PAN_FACTOR * STEP_SIZE) */\r\nconst PAN_FACTOR = 1;\r\n/** Maximum layer height */\r\nconst MAX_LAYER_HEIGHT = 60;\r\n/** Amount to move playhead per second. */\r\nconst DEFAULT_PLAYHEAD_SPEED = 1;\r\n/** Playhead fabric object name */\r\nconst NAME_PLAYHEAD = 'superfly-timeline:playhead';\r\n/** BEGIN STYLING VALUES */\r\n/** Timeline background color. */\r\nconst COLOR_BACKGROUND = '#333333';\r\n/** Layer label background color. */\r\nconst COLOR_LABEL_BACKGROUND = '#666666';\r\n/** Playhead color. */\r\nconst COLOR_PLAYHEAD = 'rgba(255, 0, 0, 0.5)';\r\n/** Playhead thickness. */\r\nconst THICKNESS_PLAYHEAD = 5;\r\n/** Color of line separating timeline rows. */\r\nconst COLOR_LINE = 'black';\r\n/** Height of line separating rows. */\r\nconst THICKNESS_LINE = 1;\r\n/** Text properties. */\r\nconst TEXT_FONT_FAMILY = 'Calibri';\r\nconst TEXT_FONT_SIZE = 16;\r\nconst TEXT_COLOR = 'white';\r\n/** Timeline object properties. */\r\nconst COLOR_TIMELINE_OBJECT_FILL = 'rgb(22, 102, 247, 0.75)';\r\nconst COLOR_TIMELINE_OBJECT_BORDER = 'rgba(232, 240, 255, 0.85)';\r\nconst THICKNESS_TIMELINE_OBJECT_BORDER = 1;\r\n/** Timeline object height as a proportion of the row height. */\r\nconst TIMELINE_OBJECT_HEIGHT = 0.8;\r\nclass TimelineVisualizer extends events_1.EventEmitter {\r\n    /**\r\n     * @param {string} canvasId The ID of the canvas object to draw within.\r\n     */\r\n    constructor(canvasId, options = {}) {\r\n        super();\r\n        // Step size.\r\n        this.stepSize = DEFAULT_STEP_SIZE;\r\n        /** @private @readonly Proportion of the canvas to be used for the layer labels column. */\r\n        this._layerLabelWidthProportionOfCanvas = LABEL_WIDTH_OF_TIMELINE;\r\n        /** @private @readonly Default time range to display. */\r\n        this._defaultDrawRange = DEFAULT_DRAW_RANGE * this.stepSize;\r\n        // Timelines currently drawn.\r\n        this._resolvedTimelines = [];\r\n        // Layers on timeline.\r\n        this._layerLabels = {};\r\n        // Start and end time of the current view. Defines the objects within view on the timeline.\r\n        this._drawTimeStart = 0;\r\n        // Store whether the mouse is held down, for scrolling.\r\n        this._mouseDown = false;\r\n        // Current zoom amount.\r\n        this._timelineZoom = DEFAULT_ZOOM_VALUE;\r\n        // List of fabric objects created.\r\n        this._fabricObjects = [];\r\n        // List of fabric objects created for layers.\r\n        this._layerFabricObjects = [];\r\n        // Whether or not the playhead should move.\r\n        this._playHeadPlaying = false;\r\n        // Speed of the playhead [units / second]\r\n        this._playSpeed = DEFAULT_PLAYHEAD_SPEED;\r\n        // The current time position of the playhead.\r\n        this._playHeadTime = 0;\r\n        // The last time updateDraw() did a draw.\r\n        this._updateDrawLastTime = 0;\r\n        // Initialise other values.\r\n        this._canvasId = canvasId;\r\n        this.initCanvas();\r\n        this._drawPlayhead = !!options.drawPlayhead;\r\n        // Calculate width of label column.\r\n        this._layerLabelWidth = this._canvasWidth * this._layerLabelWidthProportionOfCanvas;\r\n        // Calculate timeline width and start point.\r\n        this._timelineWidth = this._canvasWidth - this._layerLabelWidth;\r\n        this._timelineStart = this._layerLabelWidth;\r\n        // Put playhead at timeline start.\r\n        this._playHeadPosition = this._timelineStart;\r\n        // Draw background.\r\n        let background = new fabric_1.fabric.Rect({\r\n            left: 0,\r\n            top: 0,\r\n            fill: COLOR_BACKGROUND,\r\n            width: this._canvasWidth,\r\n            height: this._canvasHeight,\r\n            selectable: false,\r\n            name: 'background'\r\n        });\r\n        this._canvas.add(background);\r\n        // If the playhead should be draw.\r\n        if (this._drawPlayhead) {\r\n            // Draw playhead.\r\n            let playhead = new fabric_1.fabric.Rect({\r\n                left: this._playHeadPosition,\r\n                top: 0,\r\n                fill: COLOR_PLAYHEAD,\r\n                width: THICKNESS_PLAYHEAD,\r\n                height: this._canvasHeight,\r\n                selectable: false,\r\n                name: NAME_PLAYHEAD\r\n            });\r\n            this._canvas.add(playhead);\r\n            // Bring playhead to front.\r\n            this._canvas.getObjects().forEach(element => {\r\n                if (element.name === NAME_PLAYHEAD) {\r\n                    element.bringToFront();\r\n                }\r\n            });\r\n            // Tell canvas to re-render all objects.\r\n            this._canvas.renderAll();\r\n        }\r\n        this.updateDraw();\r\n    }\r\n    /**\r\n     * Initialises the canvas and registers canvas events.\r\n     */\r\n    initCanvas() {\r\n        // Create new canvas object.\r\n        this._canvas = new fabric_1.fabric.Canvas(this._canvasId);\r\n        if (!this._canvas)\r\n            throw new Error(`Canvas \"${this._canvasId}\" not found`);\r\n        // Disable group selection.\r\n        this._canvas.selection = false;\r\n        // Set cursor.\r\n        this._canvas.hoverCursor = 'default';\r\n        // Register canvas interaction event handlers.\r\n        this._canvas.on('mouse:down', event => this.canvasMouseDown(event));\r\n        this._canvas.on('mouse:up', event => this.canvasMouseUp(event));\r\n        this._canvas.on('mouse:move', event => this.canvasMouseMove(event));\r\n        this._canvas.on('mouse:wheel', event => this.canvasScrollWheel(event));\r\n        this._canvas.on('mouse:over', event => this.canvasObjectHover(event, true));\r\n        this._canvas.on('mouse:out', event => this.canvasObjectHover(event, false));\r\n        // Get width and height of canvas.\r\n        this._canvasWidth = this._canvas.getWidth();\r\n        this._canvasHeight = this._canvas.getHeight();\r\n    }\r\n    /**\r\n     * Sets the timeline to draw.\r\n     * @param {TimelineObject[]} timeline Timeline to draw.\r\n     * @param {ResolveOptions} options Options to use for resolving timeline state.\r\n     */\r\n    setTimeline(timeline, options) {\r\n        // Resolve timeline.\r\n        const resolvedTimeline = superfly_timeline_1.Resolver.resolveTimeline(timeline, options);\r\n        // Save the resolved timeline:\r\n        this._resolvedTimelines = [resolvedTimeline];\r\n        // Get layers to draw.\r\n        // const o = this.getLayersToDraw()\r\n        // this._layerLabels = o.layers\r\n        // Calculate height of rows based on number of layers.\r\n        // this._rowHeight = this.calculateRowHeight(this._layerLabels)\r\n        // Draw the layer labels.\r\n        this.drawLayerLabels();\r\n        this.drawInitialTimeline(resolvedTimeline, options);\r\n    }\r\n    /**\r\n     * Updates the timeline, should be called when actions are added/removed from a timeline\r\n     * but the same timeline is being drawn.\r\n     * @param {TimelineObject[]} timeline Timeline to draw.\r\n     * @param {ResolveOptions} options Resolve options.\r\n     */\r\n    updateTimeline(timeline, options) {\r\n        // If options have not been specified set time to 0.\r\n        if (options === undefined) {\r\n            options = {\r\n                time: 0\r\n            };\r\n        }\r\n        if (this._resolvedTimelines.length === 0) {\r\n            // There are no previous timelines, run setTimeline instead:\r\n            return this.setTimeline(timeline, options);\r\n        }\r\n        // If the playhead is being drawn, the resolve time should be at the playhead time.\r\n        if (this._drawPlayhead) {\r\n            options.time = this._playHeadTime;\r\n        }\r\n        // Resolve the timeline.\r\n        let resolvedTimeline = superfly_timeline_1.Resolver.resolveTimeline(timeline, options);\r\n        for (let _i = 0; _i < this._resolvedTimelines.length; _i++) {\r\n            let currentState = this.getTimelineDrawState(this._resolvedTimelines[_i], _i);\r\n            this.hideTimelineFabricObjects(currentState);\r\n        }\r\n        // If we're using the playhead, trim the timeline.\r\n        if (this._drawPlayhead) {\r\n            resolvedTimeline = this.trimTimeline(resolvedTimeline, { start: this._playHeadTime });\r\n            let currentTimeline = this._resolvedTimelines[this._resolvedTimelines.length - 1];\r\n            // Trim the current timeline:\r\n            if (currentTimeline) {\r\n                currentTimeline = this.trimTimeline(currentTimeline, { end: this._playHeadTime });\r\n                // Merge the timelines.\r\n                let mergedTimelines = this.mergeTimelineObjects(currentTimeline, resolvedTimeline);\r\n                // save the updated timeline to\r\n                this._resolvedTimelines[this._resolvedTimelines.length - 1] = mergedTimelines.past;\r\n                resolvedTimeline = mergedTimelines.present;\r\n            }\r\n            // Store the resolved timeline at a new spot:\r\n            this._resolvedTimelines.push(resolvedTimeline);\r\n            // let newLayers = this.getLayersToDraw()\r\n            // if (newLayers.length !== this._layerLabels.length) {\r\n            // }\r\n            this.drawLayerLabels();\r\n            // Create new fabric objects for new objects in timeline.\r\n            this.createTimelineFabricObjects(resolvedTimeline.objects, this._resolvedTimelines.length - 1);\r\n        }\r\n        else {\r\n            // Otherwise we only see one timeline at a time.\r\n            // Overwrite the previous timeline:\r\n            this._resolvedTimelines[this._resolvedTimelines.length - 1] = resolvedTimeline;\r\n            // let newLayers = this.getLayersToDraw()\r\n            // if (newLayers.length !== this._layerLabels.length) {\r\n            // }\r\n            this.drawLayerLabels();\r\n            // Create new fabric objects for new objects in timeline.\r\n            this.createTimelineFabricObjects(resolvedTimeline.objects, this._resolvedTimelines.length - 1);\r\n        }\r\n        // Draw timeline.\r\n        this.redrawTimeline();\r\n    }\r\n    /**\r\n     * Sets the viewport to a position, zoom, and playback speed.\r\n     * Playback speed currently not implemented.\r\n     * @param viewPort Object to update viewport with.\r\n     */\r\n    setViewPort(viewPort) {\r\n        // Whether the viewport has changed.\r\n        let changed = false;\r\n        // If zoom has been specified.\r\n        if (viewPort.zoom !== undefined) {\r\n            // Zoom to specified zoom.\r\n            this._timelineZoom = viewPort.zoom;\r\n            this.updateScaledDrawTimeRange();\r\n            this._drawTimeEnd = this._timelineStart + this._scaledDrawTimeRange;\r\n            changed = true;\r\n        }\r\n        // If timestamp has been specified.\r\n        if (viewPort.timestamp !== undefined) {\r\n            // Set start time to specified time.\r\n            if (viewPort.timestamp > 0) {\r\n                this._drawTimeStart = viewPort.timestamp;\r\n                this._drawTimeEnd = this._drawTimeStart + this._scaledDrawTimeRange;\r\n                changed = true;\r\n            }\r\n        }\r\n        if (viewPort.playViewPort !== undefined) {\r\n            this._playViewPort = viewPort.playViewPort;\r\n        }\r\n        // If the playback speed has been set, set the new playback speed.\r\n        if (viewPort.playSpeed !== undefined) {\r\n            if (!this._drawPlayhead)\r\n                throw new Error('setViewPort: viewPort.playSpeed was set, but drawPlayhead was not set in constructor');\r\n            this._playSpeed = viewPort.playSpeed;\r\n        }\r\n        // Set playhead playing/ not playing.\r\n        if (viewPort.playPlayhead !== undefined) {\r\n            if (!this._drawPlayhead)\r\n                throw new Error('setViewPort: viewPort.playPlayhead was set, but drawPlayhead was not set in constructor');\r\n            this._playHeadPlaying = viewPort.playPlayhead;\r\n        }\r\n        if (viewPort.playheadTime !== undefined) {\r\n            if (!this._drawPlayhead)\r\n                throw new Error('setViewPort: viewPort.playheadTime was set, but drawPlayhead was not set in constructor');\r\n            this._playHeadTime = Math.max(0, viewPort.playheadTime);\r\n            changed = true;\r\n        }\r\n        // Redraw timeline if anything has changed.\r\n        if (changed === true) {\r\n            this.computePlayheadPosition();\r\n            this.redrawTimeline();\r\n        }\r\n    }\r\n    /**\r\n     * Accessor for polling the currently hovered over object.\r\n     */\r\n    getHoveredObject() {\r\n        return this._hoveredOver;\r\n    }\r\n    /**\r\n     * Calculates the height to give to each row to fit all layers on screen.\r\n     * @param {String[]} layers Map of layers to use.\r\n     * @returns Height of rows.\r\n     */\r\n    calculateRowHeight(layers) {\r\n        return Math.min(MAX_LAYER_HEIGHT, this._canvasHeight / Object.keys(layers).length);\r\n    }\r\n    /**\r\n     * Draws the layer labels to the canvas.\r\n     */\r\n    drawLayerLabels() {\r\n        // Store layers to draw.\r\n        const o = this.getLayersToDraw();\r\n        if (!isEqual(this._layerLabels, o.layers)) {\r\n            this._layerLabels = o.layers;\r\n            // Calculate row height.\r\n            this._rowHeight = this.calculateRowHeight(this._layerLabels);\r\n            // Set timeline object height.\r\n            this._timelineObjectHeight = this._rowHeight * TIMELINE_OBJECT_HEIGHT;\r\n            // Iterate through layers.\r\n            for (let _i = 0; _i < o.layersArray.length; _i++) {\r\n                if (this._layerFabricObjects.indexOf(o.layersArray[_i]) === -1) {\r\n                    // Create a background rectangle.\r\n                    let layerRect = new fabric_1.fabric.Rect({\r\n                        left: 0,\r\n                        top: _i * this._rowHeight,\r\n                        fill: COLOR_LABEL_BACKGROUND,\r\n                        width: this._layerLabelWidth,\r\n                        height: this._rowHeight,\r\n                        selectable: false,\r\n                        name: 'Layer:Rect:' + o.layersArray[_i]\r\n                    });\r\n                    // Create label.\r\n                    let layerText = new fabric_1.fabric.Text(o.layersArray[_i], {\r\n                        width: this._layerLabelWidth,\r\n                        fontFamily: TEXT_FONT_FAMILY,\r\n                        fontSize: TEXT_FONT_SIZE,\r\n                        textAlign: 'left',\r\n                        fill: TEXT_COLOR,\r\n                        selectable: false,\r\n                        top: (_i * this._rowHeight) + (this._rowHeight / 2),\r\n                        name: 'Layer:Text:' + o.layersArray[_i]\r\n                    });\r\n                    // If this is the topmost label, draw to screen.\r\n                    // Otherwise, add a line between rows.\r\n                    if (_i === 0) {\r\n                        // Draw.\r\n                        this._canvas.add(layerRect);\r\n                        this._canvas.add(layerText);\r\n                    }\r\n                    else {\r\n                        // Create line.\r\n                        let layerLine = new fabric_1.fabric.Rect({\r\n                            left: this._layerLabelWidth,\r\n                            top: _i * this._rowHeight,\r\n                            fill: COLOR_LINE,\r\n                            width: this._timelineWidth,\r\n                            height: THICKNESS_LINE,\r\n                            selectable: false,\r\n                            name: 'Layer:Line:' + o.layersArray[_i]\r\n                        });\r\n                        // Draw.\r\n                        this._canvas.add(layerRect);\r\n                        this._canvas.add(layerText);\r\n                        this._canvas.add(layerLine);\r\n                    }\r\n                    this._layerFabricObjects.push(o.layersArray[_i]);\r\n                }\r\n            }\r\n            this._canvas.getObjects().forEach(element => {\r\n                if (element.name !== undefined) {\r\n                    let name = element.name.split(':');\r\n                    if (name[0] === 'Layer') {\r\n                        let offset = this._layerLabels[name[2]];\r\n                        if (offset === undefined)\r\n                            offset = -1;\r\n                        if (name[1] === 'Rect') {\r\n                            element.set({\r\n                                top: offset * this._rowHeight,\r\n                                height: this._rowHeight,\r\n                            });\r\n                        }\r\n                        else if (name[1] === 'Text') {\r\n                            element.set({\r\n                                top: (offset * this._rowHeight) - (TEXT_FONT_SIZE / 2) + (this._rowHeight / 2),\r\n                            });\r\n                        }\r\n                        else if (name[1] === 'Line') {\r\n                            element.set({\r\n                                top: offset * this._rowHeight,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._canvas.renderAll();\r\n        }\r\n    }\r\n    getLayersToDraw() {\r\n        let layersArray = [];\r\n        for (let _i = 0; _i < this._resolvedTimelines.length; _i++) {\r\n            for (let _j = 0; _j < Object.keys(this._resolvedTimelines[_i].layers).length; _j++) {\r\n                let layer = Object.keys(this._resolvedTimelines[_i].layers)[_j];\r\n                if (layersArray.indexOf(layer) === -1) {\r\n                    layersArray.push(layer);\r\n                }\r\n            }\r\n        }\r\n        layersArray = layersArray.sort((a, b) => {\r\n            if (a > b)\r\n                return 1;\r\n            if (a < b)\r\n                return -1;\r\n            return 0;\r\n        });\r\n        let layers = {};\r\n        layersArray.forEach((layerName, index) => {\r\n            layers[layerName] = index;\r\n        });\r\n        return {\r\n            layers: layers,\r\n            layersArray: layersArray\r\n        };\r\n    }\r\n    /**\r\n     * Draws the timeline initially.\r\n     * @param {ResolvedTimeline} timeline Timeline to draw.\r\n     * @param {ResolveOptions} options Resolve options.\r\n     */\r\n    drawInitialTimeline(timeline, options) {\r\n        // Set time range.\r\n        this._drawTimeRange = this._defaultDrawRange;\r\n        // Calculate new zoom values.\r\n        this.updateScaledDrawTimeRange();\r\n        // Set timeline start and end times.\r\n        if (options.time !== undefined) {\r\n            this._drawTimeStart = options.time;\r\n        }\r\n        this._drawTimeEnd = this._drawTimeStart + this._scaledDrawTimeRange;\r\n        // Move playhead to start time.\r\n        this._playHeadTime = this._drawTimeStart;\r\n        // Create fabric objects for all time-based objects.\r\n        this.createTimelineFabricObjects(timeline.objects, 0);\r\n        // Draw timeline.\r\n        this.redrawTimeline();\r\n    }\r\n    /**\r\n     * Redraws the timeline to the canvas.\r\n     */\r\n    redrawTimeline() {\r\n        // Calculate how many pixels are required per unit time.\r\n        this._pixelsWidthPerUnitTime = this._timelineWidth / (this._drawTimeEnd - this._drawTimeStart);\r\n        // Draw each resolved timeline.\r\n        let timeLineState = {};\r\n        for (let _i = 0; _i < this._resolvedTimelines.length; _i++) {\r\n            let ts = this.getTimelineDrawState(this._resolvedTimelines[_i], _i);\r\n            Object.keys(ts).forEach(id => {\r\n                timeLineState[id] = ts[id];\r\n            });\r\n        }\r\n        // Draw the current state.\r\n        this.drawTimelineState(timeLineState);\r\n        // Find new playhead position.\r\n        this.computePlayheadPosition();\r\n        // Redraw the playhead.\r\n        this.redrawPlayHead();\r\n    }\r\n    /**\r\n     * Draws the playhead on the canvas.\r\n     */\r\n    redrawPlayHead() {\r\n        // Check playhead should be drawn.\r\n        if (this._drawPlayhead) {\r\n            let left = this._playHeadPosition;\r\n            let height = this._canvasHeight;\r\n            let width = THICKNESS_PLAYHEAD;\r\n            if (left === -1) {\r\n                left = 0;\r\n                height = 0;\r\n                width = 0;\r\n            }\r\n            this._canvas.getObjects().forEach(element => {\r\n                if (element.name === NAME_PLAYHEAD) {\r\n                    // Move playhead and bring to front.\r\n                    element.set({\r\n                        left: left,\r\n                        height: height,\r\n                        width: width\r\n                    });\r\n                    element.bringToFront();\r\n                }\r\n            });\r\n            this._canvas.renderAll();\r\n        }\r\n    }\r\n    /**\r\n     * Draws a timeline state to the canvas.\r\n     * @param {TimelineDrawState} currentDrawState State to draw.\r\n     */\r\n    drawTimelineState(currentDrawState) {\r\n        // Iterate through cavas.\r\n        // Seemingly the only way to update objects without clearing the canvas.\r\n        this._canvas.getObjects().forEach(element => {\r\n            if (element.name !== undefined) {\r\n                // Only interested in fabric.Rect and fabric.Text\r\n                if (element.type === 'rect' || element.type === 'text') {\r\n                    // Check element is affected by current state.\r\n                    // Note: This allows for partial updates.\r\n                    if (element.name in currentDrawState) {\r\n                        let state = currentDrawState[element.name];\r\n                        // Text objects shouldn't have their dimensions modified.\r\n                        if (element.type === 'text') {\r\n                            element.set({\r\n                                top: state.top,\r\n                                left: state.left,\r\n                                visible: state.visible\r\n                                // visible: ((element.width as number) <= state.width) ? state.visible : false // Only show if text fits within timeline object.\r\n                            });\r\n                            element.setCoords();\r\n                            element.moveTo(101);\r\n                        }\r\n                        else {\r\n                            element.set({\r\n                                height: state.height,\r\n                                left: state.left,\r\n                                top: state.top,\r\n                                width: Math.max(1, state.width),\r\n                                visible: state.visible\r\n                            });\r\n                            element.setCoords();\r\n                            element.moveTo(100);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        // Tell canvas to re-render all objects.\r\n        this._canvas.renderAll();\r\n    }\r\n    /**\r\n     * Returns the draw states for all timeline objects.\r\n     * @param {ResolvedTimeline} timeline Timeline to draw.\r\n     * @param {number} timelineIndex Index of timeline being drawn.\r\n     * @returns {TimelineDrawState} State of time-based objects.\r\n     */\r\n    getTimelineDrawState(timeline, timelineIndex) {\r\n        let currentDrawState = {};\r\n        for (let key in timeline.objects) {\r\n            let timeObj = timeline.objects[key];\r\n            let parentID = timeObj.id;\r\n            for (let _i = 0; _i < timeObj.resolved.instances.length; _i++) {\r\n                let instanceObj = timeObj.resolved.instances[_i];\r\n                let name = 'timelineObject:' + timelineIndex.toString() + ':' + parentID + ':' + instanceObj.id;\r\n                currentDrawState[name] = this.createStateForObject(timeObj.layer + '', instanceObj.start, instanceObj.end);\r\n            }\r\n        }\r\n        return currentDrawState;\r\n    }\r\n    /**\r\n     * Creates a draw state for a timeline object.\r\n     * @param {string} layer Object's layer.\r\n     * @param {number} start Start time.\r\n     * @param {number} end End time.\r\n     * @returns {DrawState} State of the object to draw.\r\n     */\r\n    createStateForObject(layer, start, end) {\r\n        // Default state (hidden).\r\n        let state = { height: 0, left: 0, top: 0, width: 0, visible: false };\r\n        // State should be default if the object is not being shown.\r\n        if (this.showOnTimeline(start, end)) {\r\n            // Get object dimensions and position.\r\n            let objectWidth = this.getObjectWidth(start, end);\r\n            let objectTop = this.getObjectOffsetFromTop(layer);\r\n            // Set state properties.\r\n            state.height = this._timelineObjectHeight;\r\n            state.left = this._timelineStart + this.getObjectOffsetFromTimelineStart(start);\r\n            state.top = objectTop;\r\n            state.width = objectWidth;\r\n            state.visible = true;\r\n        }\r\n        return state;\r\n    }\r\n    /**\r\n     * Creates a draw state for a timeline object.\r\n     * @param {TimelineObjectInstance} object Object to draw.\r\n     * @param {string} parentName Name of the object's parent (the object the instance belongs to).\r\n     */\r\n    createFabricObject(name) {\r\n        let displayName = name.split(':')[2];\r\n        let resolvedObjectRect = new fabric_1.fabric.Rect({\r\n            left: 0,\r\n            width: 0,\r\n            height: 0,\r\n            top: 0,\r\n            fill: COLOR_TIMELINE_OBJECT_FILL,\r\n            stroke: COLOR_TIMELINE_OBJECT_BORDER,\r\n            strokeWidth: THICKNESS_TIMELINE_OBJECT_BORDER,\r\n            selectable: false,\r\n            visible: false,\r\n            name: name\r\n        });\r\n        let resolvedObjectLabel = new fabric_1.fabric.Text(displayName, {\r\n            fontFamily: TEXT_FONT_FAMILY,\r\n            fontSize: TEXT_FONT_SIZE,\r\n            textAlign: 'center',\r\n            fill: TEXT_COLOR,\r\n            selectable: false,\r\n            top: 0,\r\n            left: 0,\r\n            visible: false,\r\n            name: name\r\n        });\r\n        this._canvas.add(resolvedObjectRect);\r\n        this._canvas.add(resolvedObjectLabel);\r\n        // Add generated objects names to list to prevent duplication.\r\n        this._fabricObjects.push(name);\r\n    }\r\n    /**\r\n     * Creates all the fabric objects for time-based objects.\r\n     * @param {ResolvedTimelineObjects} timeline Objects to draw.\r\n     * @param {number} timelineIndex Index of timeline being drawn.\r\n     */\r\n    createTimelineFabricObjects(timeline, timelineIndex) {\r\n        for (let key in timeline) {\r\n            // Store timeline object to save on array indexing.\r\n            let timeObj = timeline[key];\r\n            for (let _i = 0; _i < timeline[key].resolved.instances.length; _i++) {\r\n                // Create name.\r\n                let name = 'timelineObject:' + timelineIndex.toString() + ':' + timeObj.id + ':' + timeObj.resolved.instances[_i].id;\r\n                // If the object doesn't already have fabric objects, create new ones.\r\n                if (this._fabricObjects.indexOf(name) === -1) {\r\n                    this.createFabricObject(name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides all of the timeline objects in the current state.\r\n     * @param currentDrawState State to hide.\r\n     */\r\n    hideTimelineFabricObjects(currentDrawState) {\r\n        this._canvas.getObjects().forEach(element => {\r\n            if (element.name !== undefined) {\r\n                // Only interested in fabric.Rect and fabric.Text\r\n                if (element.type === 'rect' || element.type === 'text') {\r\n                    // Check element is affected by current state.\r\n                    if (element.name in currentDrawState) {\r\n                        if (element.type === 'text') {\r\n                            element.set({\r\n                                top: 0,\r\n                                left: 0,\r\n                                visible: false\r\n                            });\r\n                        }\r\n                        else {\r\n                            element.set({\r\n                                top: 0,\r\n                                left: 0,\r\n                                width: 0,\r\n                                height: 0,\r\n                                visible: false\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        // Tell canvas to re-render all objects.\r\n        this._canvas.renderAll();\r\n    }\r\n    /**\r\n     * Finds the object with the latest end time in a timeline and returns the time.\r\n     * @param {ResolvedTimeline} timeline Timeline to search.\r\n     * @returns Latest end time.\r\n     */\r\n    findMaxEndTime(timeline) {\r\n        // Store first end time as max.\r\n        let max = timeline.objects[0].resolved.instances[0].end;\r\n        // Iterate through start times, if any time is later than current max, replace max.\r\n        if (Object.keys(timeline.objects).length > 1) {\r\n            for (let key in timeline.objects) {\r\n                for (let _i = 1; _i < timeline.objects[key].resolved.instances.length; _i++) {\r\n                    if (timeline.objects[key].resolved.instances[_i].end === undefined || timeline.objects[key].resolved.instances[_i].end === null) {\r\n                        break;\r\n                    }\r\n                    else {\r\n                        let time = timeline.objects[key].resolved.instances[_i].end;\r\n                        max = (time > max) ? time : max;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n    /**\r\n     * Calculates the offset, in pixels from the start of the timeline for an object.\r\n     * @param {number} start start time of the object.\r\n     * @returns {number} Offset in pixels.\r\n     */\r\n    getObjectOffsetFromTimelineStart(start) {\r\n        // Calculate offset.\r\n        let offset = (start - this._drawTimeStart) * this._pixelsWidthPerUnitTime;\r\n        // Offset cannot be to the left of the timeline start position.\r\n        if (offset < 0) {\r\n            offset = 0;\r\n        }\r\n        return offset;\r\n    }\r\n    /**\r\n     * Calculates the width, in pixels, of an object based on its duration.\r\n     * @param {number} start Start time of the object.\r\n     * @param {number} end End time of the object.\r\n     * @returns {number} Width in pixels.\r\n     */\r\n    getObjectWidth(startTime, endTime) {\r\n        if (!endTime)\r\n            return this._canvasWidth;\r\n        // If the start time is less than the timeline start, set to timeline start.\r\n        if (startTime < this._drawTimeStart) {\r\n            startTime = this._drawTimeStart;\r\n        }\r\n        // Calculate duration of the object remaining on the timeline.\r\n        let duration = endTime - startTime;\r\n        // Return end point position in pixels.\r\n        return duration * this._pixelsWidthPerUnitTime;\r\n    }\r\n    /**\r\n     * Determines whether to show an object on the timeline.\r\n     * @param {number} start Object start time.\r\n     * @param {number} end Object end time.\r\n     * @returns {true} if object should be shown on the timeline.\r\n     */\r\n    showOnTimeline(start, end) {\r\n        let isAfter = start >= this._drawTimeEnd;\r\n        let isBefore = (end || Infinity) <= this._drawTimeStart;\r\n        return !isAfter && !isBefore;\r\n    }\r\n    /**\r\n     * Calculate position of object instance from top of timeline according to its layer.\r\n     * @param {string} layer Object's layer.\r\n     * @returns Position relative to top of canvas in pixels.\r\n     */\r\n    getObjectOffsetFromTop(layerName) {\r\n        let top = this._layerLabels[layerName];\r\n        return top * this._rowHeight;\r\n    }\r\n    /**\r\n     * Moves the playhead. Called periodically.\r\n     */\r\n    updateDraw() {\r\n        const now = Date.now();\r\n        // How long time since last update:\r\n        const dt = (this._updateDrawLastTime > 0 ?\r\n            now - this._updateDrawLastTime :\r\n            1) / 1000;\r\n        this._updateDrawLastTime = now;\r\n        // Check playhead should be drawn.\r\n        let updatePlayhead = false;\r\n        let updateEverything = false;\r\n        if (this._playHeadPlaying && this._drawPlayhead) {\r\n            // Add time to playhead.\r\n            this._playHeadTime += this._playSpeed * dt;\r\n            updatePlayhead = true;\r\n        }\r\n        if (this._playViewPort) {\r\n            let play = true;\r\n            if (this._playHeadPlaying && this._drawPlayhead) {\r\n                // Only play if playhead is visible\r\n                if (this._playHeadTime > this._drawTimeEnd ||\r\n                    this._playHeadTime < this._drawTimeStart) {\r\n                    play = false;\r\n                }\r\n            }\r\n            if (play) {\r\n                this._drawTimeStart += this._playSpeed * dt;\r\n                this._drawTimeEnd += this._playSpeed * dt;\r\n                updateEverything = true;\r\n            }\r\n        }\r\n        if (updateEverything) {\r\n            this.redrawTimeline();\r\n        }\r\n        else if (updatePlayhead) {\r\n            // Calculate new playhead position and redraw if the playhead has moved.\r\n            if (this.computePlayheadPosition()) {\r\n                this.redrawPlayHead();\r\n            }\r\n        }\r\n        // call this function on next frame\r\n        window.requestAnimationFrame(() => this.updateDraw());\r\n    }\r\n    /**\r\n     * Calulates the playhead position based on time.\r\n     * @returns true if the playhead has moved.\r\n     */\r\n    computePlayheadPosition() {\r\n        // Get playhead position.\r\n        let pos = this.timeToXCoord(this._playHeadTime);\r\n        // Redraw if playhead has moved.\r\n        if (pos !== this._playHeadPosition) {\r\n            this._playHeadPosition = pos;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Handles mouse down event.\r\n     * @param opt Mouse event.\r\n     */\r\n    canvasMouseDown(opt) {\r\n        // Extract event.\r\n        let event = opt.e;\r\n        // Store mouse is down.\r\n        this._mouseDown = true;\r\n        // Store X position of mouse on click.\r\n        this._mouseLastX = event.clientX;\r\n        // Prevent event.\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    /**\r\n     * Handles mouse up event.\r\n     * @param opt Mouse event.\r\n     */\r\n    canvasMouseUp(opt) {\r\n        // Mouse no longer down.\r\n        this._mouseDown = false;\r\n        // Reset scroll direction.\r\n        this._lastScrollDirection = 0;\r\n        // Prevent event.\r\n        opt.e.preventDefault();\r\n        opt.e.stopPropagation();\r\n    }\r\n    /**\r\n     * Handles mouse movement on canvas.\r\n     * @param opt Mouse event.\r\n     */\r\n    canvasMouseMove(opt) {\r\n        // If mouse is down.\r\n        if (this._mouseDown) {\r\n            // Extract event.\r\n            let event = opt.e;\r\n            // If we are beginning scrolling, we can move freely.\r\n            if (this._lastScrollDirection === undefined || this._lastScrollDirection === 0) {\r\n                // Store current mouse X.\r\n                this._mouseLastX = event.clientX;\r\n                // Calculate change in X.\r\n                let deltaX = event.clientX - this._mouseLastX;\r\n                // Store scrolling direction.\r\n                if (deltaX < 0) {\r\n                    this._lastScrollDirection = -1;\r\n                }\r\n                else {\r\n                    this._lastScrollDirection = 1;\r\n                }\r\n                // Scroll to new X position.\r\n                this.canvasScrollByDeltaX(-deltaX);\r\n            }\r\n            else {\r\n                // Calculate scroll direction.\r\n                let direction = this._mouseLastX - event.clientX;\r\n                // If changing direction, store new direction but don't scroll.\r\n                if (direction < 0 && this._lastScrollDirection === 1) {\r\n                    this._mouseLastX = event.clientX;\r\n                    this._lastScrollDirection = -1;\r\n                }\r\n                else if (direction > 0 && this._lastScrollDirection === -1) {\r\n                    this._mouseLastX = event.clientX;\r\n                    this._lastScrollDirection = 1;\r\n                }\r\n                else {\r\n                    // Calculate change in X.\r\n                    let deltaX = event.clientX - this._mouseLastX;\r\n                    // Store last X position.\r\n                    this._mouseLastX = event.clientX;\r\n                    // Move by change in X.\r\n                    this.canvasScrollByDeltaX(-deltaX);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handles scroll wheel events on the canvas.\r\n     * @param opt Scroll event.\r\n     */\r\n    canvasScrollWheel(opt) {\r\n        // Extract event.\r\n        let event = opt.e;\r\n        // Get mouse pointer coordinates on canvas.\r\n        let canvasCoord = this._canvas.getPointer(event.e);\r\n        // Don't scroll if mouse is not over timeline.\r\n        if (canvasCoord.x <= this._timelineStart) {\r\n            return;\r\n        }\r\n        // CTRL + scroll to zoom.\r\n        if (event.ctrlKey === true) {\r\n            // If scrolling \"up\".\r\n            if (event.deltaY > 0) {\r\n                // Zoom out.\r\n                this._timelineZoom = this._timelineZoom * Math.pow(ZOOM_FACTOR, Math.abs(event.deltaY));\r\n                // Zoom relative to cursor position.\r\n                this.zoomUnderCursor(canvasCoord.x);\r\n                this.redrawTimeline();\r\n            }\r\n            else if (event.deltaY < 0) {\r\n                // Zoom in.\r\n                this._timelineZoom = this._timelineZoom / Math.pow(ZOOM_FACTOR, Math.abs(event.deltaY));\r\n                // Zoom relative to cursor position.\r\n                this.zoomUnderCursor(canvasCoord.x);\r\n                this.redrawTimeline();\r\n            }\r\n        }\r\n        else if (event.deltaX !== 0) { // Scroll on x-axis\r\n            // Pan.\r\n            this.canvasScrollByDeltaX((event.deltaX * (PAN_FACTOR * this.stepSize)));\r\n        }\r\n        else if (event.deltaY !== 0 && event.altKey === true) { // Also scroll on alt-key + scroll y-axis\r\n            // Pan.\r\n            this.canvasScrollByDeltaX((event.deltaY * (PAN_FACTOR * this.stepSize)));\r\n        }\r\n        // Prevent event.\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    /**\r\n     * Scroll across the canvas by a specified X value.\r\n     * @param {number} deltaX Value to move by.\r\n     */\r\n    canvasScrollByDeltaX(deltaX) {\r\n        // Calculate new starting time.\r\n        let targetStart = this._drawTimeStart + (deltaX / this._pixelsWidthPerUnitTime);\r\n        // Starting time cannot be < 0.\r\n        if (targetStart < 0) {\r\n            targetStart = 0;\r\n        }\r\n        // Optimisation, don't redraw if nothing has changed.\r\n        if (targetStart === this._drawTimeStart) {\r\n            return;\r\n        }\r\n        // Calculate end point.\r\n        let targetEnd = targetStart + this._scaledDrawTimeRange;\r\n        // Update timeline start and end values.\r\n        this._drawTimeStart = targetStart;\r\n        this._drawTimeEnd = targetEnd;\r\n        // Redraw timeline.\r\n        this.redrawTimeline();\r\n    }\r\n    /**\r\n     * Called when a canvas object is hovered over.\r\n     * @param {fabric.IEvent} event Hover event.\r\n     * @param {boolean} over Whether the cursor has moved over an object or out of an object.\r\n     */\r\n    canvasObjectHover(event, over) {\r\n        if (over) {\r\n            if (event.target) {\r\n                if (event.target.name) {\r\n                    // Get object metadata from the object name of the hovered object.\r\n                    let meta = this.timelineMetaFromString(event.target.name);\r\n                    // If we are hovering over a timeline object.\r\n                    if (meta !== undefined && meta.type === 'timelineObject') {\r\n                        // Get the timeline object and the instance being hovered over.\r\n                        let timelineObject = this._resolvedTimelines[meta.timelineIndex].objects[meta.name];\r\n                        let instance = timelineObject.resolved.instances.find(instance => instance.id === meta.instance);\r\n                        // Get the position of the cursor relative to the canvas.\r\n                        let cursorPostion = this._canvas.getPointer(event.e);\r\n                        // Construct hover info.\r\n                        let hoverInfo = {\r\n                            object: timelineObject,\r\n                            instance: instance,\r\n                            pointer: { xPostion: cursorPostion.x, yPosition: cursorPostion.y }\r\n                        };\r\n                        this._hoveredOver = hoverInfo;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._hoveredOver = undefined;\r\n        }\r\n        this.emit('timeline:hover', { detail: this._hoveredOver });\r\n    }\r\n    /**\r\n     * Calculates the new scaled timeline start and end times according to the current zoom value.\r\n     */\r\n    updateScaledDrawTimeRange() {\r\n        this._scaledDrawTimeRange = this._drawTimeRange * (this._timelineZoom / 100);\r\n    }\r\n    /**\r\n     * Zooms into/out of timeline, keeping the time under the cursor in the same position.\r\n     * @param cursorX Position of mouse cursor.\r\n     */\r\n    zoomUnderCursor(cursorX) {\r\n        // Get time under cursor.\r\n        let coordToTime = this.cursorPosToTime(cursorX);\r\n        // Calculate position of mouse relative to edges of timeline.\r\n        let ratio = this.getCursorPositionAcrossTimeline(cursorX);\r\n        // Set zoom values.\r\n        this.updateScaledDrawTimeRange();\r\n        // Calculate start and end values.\r\n        let targetStart = coordToTime - (ratio * this._scaledDrawTimeRange);\r\n        let targetEnd = targetStart + this._scaledDrawTimeRange;\r\n        // Start cannot be less than 0 but we must preserve the time range to draw.\r\n        if (targetStart < 0) {\r\n            let diff = -targetStart;\r\n            targetStart = 0;\r\n            targetEnd += diff;\r\n        }\r\n        // Set draw times.\r\n        this._drawTimeStart = targetStart;\r\n        this._drawTimeEnd = targetEnd;\r\n    }\r\n    /**\r\n     * Gets the current time under the mouse cursor.\r\n     * @param cursorX Mouse cursor position (x-axis).\r\n     * @returns Time under cursor, or -1 if the cursor is not over the timeline.\r\n     */\r\n    cursorPosToTime(cursorX) {\r\n        // Check if over timeline.\r\n        if (cursorX <= this._timelineStart || cursorX >= this._timelineStart + this._timelineWidth) {\r\n            return -1;\r\n        }\r\n        let ratio = this.getCursorPositionAcrossTimeline(cursorX);\r\n        return this._drawTimeStart + (this._scaledDrawTimeRange * ratio);\r\n    }\r\n    /**\r\n     * Gets the position of the mouse cursor as a percentage of the width of the timeline.\r\n     * @param cursorX Mouse cursor position.\r\n     * @returns Cursor position relative to timeline width, or -1 if the cursor is not over the timeline.\r\n     */\r\n    getCursorPositionAcrossTimeline(cursorX) {\r\n        // Check if over timeline.\r\n        if (cursorX <= this._timelineStart || cursorX >= this._timelineStart + this._timelineWidth) {\r\n            return -1;\r\n        }\r\n        let diffX = cursorX - this._timelineStart;\r\n        let ratio = diffX / this._timelineWidth;\r\n        return ratio;\r\n    }\r\n    /**\r\n     * Calculates the X position of a time value.\r\n     * @param {number} time The time to convert.\r\n     * @returns {number} The X coordinate of the time.\r\n     */\r\n    timeToXCoord(time) {\r\n        // If playhead is off the canvas\r\n        if (time < this._drawTimeStart) {\r\n            return -1;\r\n        }\r\n        if (time > this._drawTimeEnd) {\r\n            return this._timelineWidth + this._timelineStart;\r\n        }\r\n        // (Proportion of time * timeline width) + layer label width\r\n        return ((time - this._drawTimeStart) / (this._drawTimeEnd - this._drawTimeStart) * this._timelineWidth) + this._timelineStart;\r\n    }\r\n    /**\r\n     * Trims a timeline so that objects only exist within a specified time period.\r\n     * @param timeline Timeline to trim.\r\n     * @param trim Times to trim between.\r\n     */\r\n    trimTimeline(timeline, trim) {\r\n        // The new resolved objects.\r\n        let newObjects = {};\r\n        // Iterate through resolved objects.\r\n        Object.keys(timeline.objects).forEach((objId) => {\r\n            const obj = timeline.objects[objId];\r\n            obj.resolved.instances.forEach(instance => {\r\n                // Whether to insert this object into the new timeline.\r\n                let useInstance = false;\r\n                let newInstance = Object.assign({}, instance); // clone\r\n                // If trimming the start time.\r\n                if (trim.start) {\r\n                    // If the object ends after the trim start time.\r\n                    if ((instance.end || Infinity) > trim.start) {\r\n                        useInstance = true;\r\n                        if (newInstance.start < trim.start) {\r\n                            newInstance.start = trim.start;\r\n                        }\r\n                    }\r\n                }\r\n                // If trimming the end time.\r\n                if (trim.end) {\r\n                    // If the object starts before the trim end time.\r\n                    if (instance.start < trim.end) {\r\n                        useInstance = true;\r\n                        if ((newInstance.end || Infinity) > trim.end) {\r\n                            newInstance.end = trim.end;\r\n                        }\r\n                    }\r\n                }\r\n                if (useInstance &&\r\n                    newInstance.start < (newInstance.end || Infinity)) {\r\n                    // If there isn't a resolved object for the new instance, create it.\r\n                    if (Object.keys(newObjects).indexOf(objId) === -1) {\r\n                        let newObject = {\r\n                            content: obj.content,\r\n                            enable: obj.content,\r\n                            id: obj.id,\r\n                            layer: obj.layer,\r\n                            resolved: {\r\n                                instances: [\r\n                                    newInstance\r\n                                ],\r\n                                levelDeep: obj.resolved.levelDeep,\r\n                                resolved: obj.resolved.resolved,\r\n                                resolving: obj.resolved.resolving\r\n                            }\r\n                        };\r\n                        newObjects[objId] = newObject;\r\n                    }\r\n                    else {\r\n                        newObjects[objId].resolved.instances.push(newInstance);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return {\r\n            classes: timeline.classes,\r\n            layers: timeline.layers,\r\n            objects: newObjects,\r\n            options: timeline.options,\r\n            statistics: timeline.statistics\r\n        };\r\n    }\r\n    /**\r\n     * Merges two timelines by merging instances of objects that intersect each other.\r\n     * @param past Older timeline.\r\n     * @param present Newer timeline.\r\n     * @returns {ResolvedTimeline[2]} [past, present] containing altered values.\r\n     */\r\n    mergeTimelineObjects(past, present) {\r\n        // Iterate over objects in the first timeline.\r\n        Object.keys(past.objects).forEach((objId) => {\r\n            const pastObj = past.objects[objId];\r\n            // If an object exists in both timelines,\r\n            if (objId in present.objects) {\r\n                const presentObj = present.objects[objId];\r\n                if (\r\n                // Compare the objects, only look into merging them if they look identical\r\n                isEqual(Object.assign({}, pastObj, { resolved: null }), Object.assign({}, presentObj, { resolved: null }))) {\r\n                    // Iterate over all instances of those objects.\r\n                    pastObj.resolved.instances.forEach(pastInstance => {\r\n                        presentObj.resolved.instances.forEach(presentInstance => {\r\n                            // If the instances are next to each other, merge them.\r\n                            if (pastInstance.end === presentInstance.start) {\r\n                                presentInstance.start = pastInstance.start;\r\n                                // Remove the older instance.\r\n                                pastObj.resolved.instances.splice(pastObj.resolved.instances.indexOf(presentInstance), 1);\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    console.log('not equal:');\r\n                    console.log(pastObj);\r\n                    console.log(presentObj);\r\n                }\r\n            }\r\n        });\r\n        return { past, present };\r\n    }\r\n    /**\r\n     * Gets metadata for a timeline object from a string representation.\r\n     * @param {string} meta Metadata string.\r\n     * @returns {TimelineObjectMetaData | undefined} Extracted metadata or undefined if the string does not contain the required values.\r\n     */\r\n    timelineMetaFromString(meta) {\r\n        let metaArray = meta.split(':');\r\n        if (metaArray.length === 4) {\r\n            return {\r\n                type: metaArray[0],\r\n                timelineIndex: parseInt(metaArray[1], 10),\r\n                name: metaArray[2],\r\n                instance: metaArray[3]\r\n            };\r\n        }\r\n        return;\r\n    }\r\n}\r\nexports.TimelineVisualizer = TimelineVisualizer;\r\n//# sourceMappingURL=timelineVisualizer.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n","/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.6.0' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require('jsdom')\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = require('xmldom').DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n    var pointer, eventTouchProp = event[touchProp];\n\n    if (eventTouchProp && eventTouchProp[0]) {\n      pointer = eventTouchProp[0][clientProp];\n    }\n\n    if (typeof pointer === 'undefined') {\n      pointer = event[clientProp];\n    }\n\n    return pointer;\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, 'fill');\n      _this.resolveGradient(obj, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property];\n    if (!(/^url\\(/).test(value)) {\n      return;\n    }\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = object.width / 2 - this.offsetX, offsetY = object.height / 2 - this.offsetY;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      commonAttributes += ' gradientTransform=\"matrix(' + transform.join(' ') + ')\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObjectMethod(clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\n          finalHeight = this.height / vpt[3];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n      this._setBrushStyles();\n      var color = new fabric.Color(this.color);\n      this.needsFullRender = (color.getAlpha() < 1);\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      functor(fabric.window, 'resize', this._onResize);\n      functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\n      functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'dragover', this._onDragOver);\n      functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\n      functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\n      functor(this.upperCanvasEl, 'drop', this._onDrop);\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover',\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n    },\n\n    /**\n     * Manage the syntetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSynteticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n        this[config.targetName] = target;\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible || currentObject.onSelect({ e: e })) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is usefull to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          originalContext = this.contextContainer,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = canvasEl.getContext('2d');\n      // will be renderAllExport();\n      this.renderAll();\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = originalContext;\n      this.interactive = originalInteractive;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX,\n          zoomY = objectScale.scaleY,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        scaling = this.getObjectScaling();\n        shadowOffset.x = 2 * Math.round((abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round((abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY));\n      }\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the objects containe the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions();\n      if (skewX === 0 && skewY === 0) {\n        return { x: dimensions.x * this.scaleX, y: dimensions.y * this.scaleY };\n      }\n      var dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = transform.map(function(value) {\n            return toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n          }).join(' ');\n      return 'transform=\"matrix(' + svgTransform + ')' +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ')' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle, withShadow = options.withShadow,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          absoluteClipPath = this.clipPath && this.clipPath.absolutePositioned,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\"', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      return this._createBaseSVGMarkup(\n        svgString,\n        { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n        return element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching && this.needsItsOwnCache();\n      return this.ownCaching;\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line number\n     * @param {Number} char the character number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, char) {\n      return this.getValueOfPropertyAt(line, char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft),\n          internalMarkup = this._wrapSVGTextAndBg(textAndBg);\n      return this._createBaseSVGMarkup(\n        internalMarkup, { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r\\u200B\\u200C]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n    * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target, scaled,\n        scaleX = localMouse.x * t.scaleX / _dim.x,\n        scaleY = localMouse.y * t.scaleY / _dim.y;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (w >= t.getMinWidth()) {\n        scaled = w !== t.width;\n        t.set('width', w);\n        return scaled;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n});\r\n"]}